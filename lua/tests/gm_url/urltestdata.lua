return {
	"See ../README.md for a description of the format.",
	{
		input = "http://example%09.%0Aorg",
		base = "http://example.org/foo/bar",
		href = "http://example.org/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://user:pass@foo:21/bar;par?b#c",
		base = "http://example.org/foo/bar",
		href = "http://user:pass@foo:21/bar;par?b#c",
		origin = "http://foo:21",
		protocol = "http:",
		username = "user",
		password = "pass",
		host = "foo:21",
		hostname = "foo",
		port = "21",
		pathname = "/bar;par",
		search = "?b",
		hash = "#c",
	},
	{
		input = "https://test:@test",
		base = nil,
		href = "https://test@test/",
		origin = "https://test",
		protocol = "https:",
		username = "test",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https://:@test",
		base = nil,
		href = "https://test/",
		origin = "https://test",
		protocol = "https:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "non-special://test:@test/x",
		base = nil,
		href = "non-special://test@test/x",
		origin = "null",
		protocol = "non-special:",
		username = "test",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/x",
		search = "",
		hash = "",
	},
	{
		input = "non-special://:@test/x",
		base = nil,
		href = "non-special://test/x",
		origin = "null",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/x",
		search = "",
		hash = "",
	},
	{
		input = "http:foo.com",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/foo.com",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/foo.com",
		search = "",
		hash = "",
	},
	{
		input = "%09   :foo.com   %0A",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:foo.com",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:foo.com",
		search = "",
		hash = "",
	},
	{
		input = " foo.com  ",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/foo.com",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/foo.com",
		search = "",
		hash = "",
	},
	{
		input = "a:%09 foo.com",
		base = "http://example.org/foo/bar",
		href = "a: foo.com",
		origin = "null",
		protocol = "a:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = " foo.com",
		search = "",
		hash = "",
	},
	{
		input = "http://f:21/ b ? d # e ",
		base = "http://example.org/foo/bar",
		href = "http://f:21/%2520b%2520?%2520d%2520#%2520e",
		origin = "http://f:21",
		protocol = "http:",
		username = "",
		password = "",
		host = "f:21",
		hostname = "f",
		port = "21",
		pathname = "/%2520b%2520",
		search = "?%2520d%2520",
		hash = "#%2520e",
	},
	{
		input = "lolscheme:x x#x x",
		base = nil,
		href = "lolscheme:x x#x%2520x",
		protocol = "lolscheme:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "x x",
		search = "",
		hash = "#x%2520x",
	},
	{
		input = "http://f:/c",
		base = "http://example.org/foo/bar",
		href = "http://f/c",
		origin = "http://f",
		protocol = "http:",
		username = "",
		password = "",
		host = "f",
		hostname = "f",
		port = "",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "http://f:0/c",
		base = "http://example.org/foo/bar",
		href = "http://f:0/c",
		origin = "http://f:0",
		protocol = "http:",
		username = "",
		password = "",
		host = "f:0",
		hostname = "f",
		port = "0",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "http://f:00000000000000/c",
		base = "http://example.org/foo/bar",
		href = "http://f:0/c",
		origin = "http://f:0",
		protocol = "http:",
		username = "",
		password = "",
		host = "f:0",
		hostname = "f",
		port = "0",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "http://f:00000000000000000000080/c",
		base = "http://example.org/foo/bar",
		href = "http://f/c",
		origin = "http://f",
		protocol = "http:",
		username = "",
		password = "",
		host = "f",
		hostname = "f",
		port = "",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "http://f:b/c",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://f: /c",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://f:%0A/c",
		base = "http://example.org/foo/bar",
		href = "http://f/c",
		origin = "http://f",
		protocol = "http:",
		username = "",
		password = "",
		host = "f",
		hostname = "f",
		port = "",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "http://f:fifty-two/c",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://f:999999/c",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "non-special://f:999999/c",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://f: 21 / b ? d # e ",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "  %09",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = ":foo.com/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:foo.com/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:foo.com/",
		search = "",
		hash = "",
	},
	{
		input = ":foo.com%5C",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:foo.com/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:foo.com/",
		search = "",
		hash = "",
	},
	{
		input = ":",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:",
		search = "",
		hash = "",
	},
	{
		input = ":a",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:a",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:a",
		search = "",
		hash = "",
	},
	{
		input = ":/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:/",
		search = "",
		hash = "",
	},
	{
		input = ":%5C",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:/",
		search = "",
		hash = "",
	},
	{
		input = ":#",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:#",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:",
		search = "",
		hash = "",
	},
	{
		input = "#",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar#",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "#/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar#/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "#/",
	},
	{
		input = "#%5C",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar#%5C",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "#%5C",
	},
	{
		input = "#;?",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar#;?",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "#;?",
	},
	{
		input = "?",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar?",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = ":23",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:23",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:23",
		search = "",
		hash = "",
	},
	{
		input = "/:23",
		base = "http://example.org/foo/bar",
		href = "http://example.org/:23",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/:23",
		search = "",
		hash = "",
	},
	{
		input = "%5Cx",
		base = "http://example.org/foo/bar",
		href = "http://example.org/x",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/x",
		search = "",
		hash = "",
	},
	{
		input = "%5C%5Cx%5Chello",
		base = "http://example.org/foo/bar",
		href = "http://x/hello",
		origin = "http://x",
		protocol = "http:",
		username = "",
		password = "",
		host = "x",
		hostname = "x",
		port = "",
		pathname = "/hello",
		search = "",
		hash = "",
	},
	{
		input = "::",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/::",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/::",
		search = "",
		hash = "",
	},
	{
		input = "::23",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/::23",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/::23",
		search = "",
		hash = "",
	},
	{
		input = "foo://",
		base = "http://example.org/foo/bar",
		href = "foo://",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	{
		input = "http://a:b@c:29/d",
		base = "http://example.org/foo/bar",
		href = "http://a:b@c:29/d",
		origin = "http://c:29",
		protocol = "http:",
		username = "a",
		password = "b",
		host = "c:29",
		hostname = "c",
		port = "29",
		pathname = "/d",
		search = "",
		hash = "",
	},
	{
		input = "http::@c:29",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/:@c:29",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/:@c:29",
		search = "",
		hash = "",
	},
	{
		input = "http://&a:foo(b]c@d:2/",
		base = "http://example.org/foo/bar",
		href = "http://&a:foo(b%255Dc@d:2/",
		origin = "http://d:2",
		protocol = "http:",
		username = "&a",
		password = "foo(b%255Dc",
		host = "d:2",
		hostname = "d",
		port = "2",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://::@c@d:2",
		base = "http://example.org/foo/bar",
		href = "http://:%253A%2540c@d:2/",
		origin = "http://d:2",
		protocol = "http:",
		username = "",
		password = "%253A%2540c",
		host = "d:2",
		hostname = "d",
		port = "2",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://foo.com:b@d/",
		base = "http://example.org/foo/bar",
		href = "http://foo.com:b@d/",
		origin = "http://d",
		protocol = "http:",
		username = "foo.com",
		password = "b",
		host = "d",
		hostname = "d",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://foo.com/%5C@",
		base = "http://example.org/foo/bar",
		href = "http://foo.com//@",
		origin = "http://foo.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.com",
		hostname = "foo.com",
		port = "",
		pathname = "//@",
		search = "",
		hash = "",
	},
	{
		input = "http:%5C%5Cfoo.com%5C",
		base = "http://example.org/foo/bar",
		href = "http://foo.com/",
		origin = "http://foo.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.com",
		hostname = "foo.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:%5C%5Ca%5Cb:c%5Cd@foo.com%5C",
		base = "http://example.org/foo/bar",
		href = "http://a/b:c/d@foo.com/",
		origin = "http://a",
		protocol = "http:",
		username = "",
		password = "",
		host = "a",
		hostname = "a",
		port = "",
		pathname = "/b:c/d@foo.com/",
		search = "",
		hash = "",
	},
	{
		input = "http://a:b@c%5C",
		base = nil,
		href = "http://a:b@c/",
		origin = "http://c",
		protocol = "http:",
		username = "a",
		password = "b",
		host = "c",
		hostname = "c",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ws://a@b%5Cc",
		base = nil,
		href = "ws://a@b/c",
		origin = "ws://b",
		protocol = "ws:",
		username = "a",
		password = "",
		host = "b",
		hostname = "b",
		port = "",
		pathname = "/c",
		search = "",
		hash = "",
	},
	{
		input = "foo:/",
		base = "http://example.org/foo/bar",
		href = "foo:/",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "foo:/bar.com/",
		base = "http://example.org/foo/bar",
		href = "foo:/bar.com/",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/bar.com/",
		search = "",
		hash = "",
	},
	{
		input = "foo://///////",
		base = "http://example.org/foo/bar",
		href = "foo://///////",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "///////",
		search = "",
		hash = "",
	},
	{
		input = "foo://///////bar.com/",
		base = "http://example.org/foo/bar",
		href = "foo://///////bar.com/",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "///////bar.com/",
		search = "",
		hash = "",
	},
	{
		input = "foo:////://///",
		base = "http://example.org/foo/bar",
		href = "foo:////://///",
		origin = "null",
		protocol = "foo:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//://///",
		search = "",
		hash = "",
	},
	{
		input = "c:/foo",
		base = "http://example.org/foo/bar",
		href = "c:/foo",
		origin = "null",
		protocol = "c:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/foo",
		search = "",
		hash = "",
	},
	{
		input = "//foo/bar",
		base = "http://example.org/foo/bar",
		href = "http://foo/bar",
		origin = "http://foo",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/bar",
		search = "",
		hash = "",
	},
	{
		input = "http://foo/path;a??e#f#g",
		base = "http://example.org/foo/bar",
		href = "http://foo/path;a??e#f#g",
		origin = "http://foo",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/path;a",
		search = "??e",
		hash = "#f#g",
	},
	{
		input = "http://foo/abcd?efgh?ijkl",
		base = "http://example.org/foo/bar",
		href = "http://foo/abcd?efgh?ijkl",
		origin = "http://foo",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/abcd",
		search = "?efgh?ijkl",
		hash = "",
	},
	{
		input = "http://foo/abcd#foo?bar",
		base = "http://example.org/foo/bar",
		href = "http://foo/abcd#foo?bar",
		origin = "http://foo",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/abcd",
		search = "",
		hash = "#foo?bar",
	},
	{
		input = "[61:24:74]:98",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/[61:24:74]:98",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/[61:24:74]:98",
		search = "",
		hash = "",
	},
	{
		input = "http:[61:27]/:foo",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/[61:27]/:foo",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/[61:27]/:foo",
		search = "",
		hash = "",
	},
	{
		input = "http://[1::2]:3:4",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://2001::1",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://2001::1]",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://2001::1]:80",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://[2001::1]",
		base = "http://example.org/foo/bar",
		href = "http://[2001::1]/",
		origin = "http://[2001::1]",
		protocol = "http:",
		username = "",
		password = "",
		host = "[2001::1]",
		hostname = "[2001::1]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://[::127.0.0.1]",
		base = "http://example.org/foo/bar",
		href = "http://[::7f00:1]/",
		origin = "http://[::7f00:1]",
		protocol = "http:",
		username = "",
		password = "",
		host = "[::7f00:1]",
		hostname = "[::7f00:1]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://[::127.0.0.1.]",
		base = "http://example.org/foo/bar",
		failure = true,
	},
	{
		input = "http://[0:0:0:0:0:0:13.1.68.3]",
		base = "http://example.org/foo/bar",
		href = "http://[::d01:4403]/",
		origin = "http://[::d01:4403]",
		protocol = "http:",
		username = "",
		password = "",
		host = "[::d01:4403]",
		hostname = "[::d01:4403]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://[2001::1]:80",
		base = "http://example.org/foo/bar",
		href = "http://[2001::1]/",
		origin = "http://[2001::1]",
		protocol = "http:",
		username = "",
		password = "",
		host = "[2001::1]",
		hostname = "[2001::1]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/example.com/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/example.com/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ftp:/example.com/",
		base = "http://example.org/foo/bar",
		href = "ftp://example.com/",
		origin = "ftp://example.com",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https:/example.com/",
		base = "http://example.org/foo/bar",
		href = "https://example.com/",
		origin = "https://example.com",
		protocol = "https:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "madeupscheme:/example.com/",
		base = "http://example.org/foo/bar",
		href = "madeupscheme:/example.com/",
		origin = "null",
		protocol = "madeupscheme:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "file:/example.com/",
		base = "http://example.org/foo/bar",
		href = "file:///example.com/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "file://example:1/",
		base = nil,
		failure = true,
	},
	{
		input = "file://example:test/",
		base = nil,
		failure = true,
	},
	{
		input = "file://example%25/",
		base = nil,
		failure = true,
	},
	{
		input = "file://[example]/",
		base = nil,
		failure = true,
	},
	{
		input = "ftps:/example.com/",
		base = "http://example.org/foo/bar",
		href = "ftps:/example.com/",
		origin = "null",
		protocol = "ftps:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "gopher:/example.com/",
		base = "http://example.org/foo/bar",
		href = "gopher:/example.com/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ws:/example.com/",
		base = "http://example.org/foo/bar",
		href = "ws://example.com/",
		origin = "ws://example.com",
		protocol = "ws:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss:/example.com/",
		base = "http://example.org/foo/bar",
		href = "wss://example.com/",
		origin = "wss://example.com",
		protocol = "wss:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "data:/example.com/",
		base = "http://example.org/foo/bar",
		href = "data:/example.com/",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "javascript:/example.com/",
		base = "http://example.org/foo/bar",
		href = "javascript:/example.com/",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "mailto:/example.com/",
		base = "http://example.org/foo/bar",
		href = "mailto:/example.com/",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "http:example.com/",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/example.com/",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ftp:example.com/",
		base = "http://example.org/foo/bar",
		href = "ftp://example.com/",
		origin = "ftp://example.com",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https:example.com/",
		base = "http://example.org/foo/bar",
		href = "https://example.com/",
		origin = "https://example.com",
		protocol = "https:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "madeupscheme:example.com/",
		base = "http://example.org/foo/bar",
		href = "madeupscheme:example.com/",
		origin = "null",
		protocol = "madeupscheme:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ftps:example.com/",
		base = "http://example.org/foo/bar",
		href = "ftps:example.com/",
		origin = "null",
		protocol = "ftps:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "gopher:example.com/",
		base = "http://example.org/foo/bar",
		href = "gopher:example.com/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ws:example.com/",
		base = "http://example.org/foo/bar",
		href = "ws://example.com/",
		origin = "ws://example.com",
		protocol = "ws:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss:example.com/",
		base = "http://example.org/foo/bar",
		href = "wss://example.com/",
		origin = "wss://example.com",
		protocol = "wss:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "data:example.com/",
		base = "http://example.org/foo/bar",
		href = "data:example.com/",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "javascript:example.com/",
		base = "http://example.org/foo/bar",
		href = "javascript:example.com/",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "mailto:example.com/",
		base = "http://example.org/foo/bar",
		href = "mailto:example.com/",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "/a/b/c",
		base = "http://example.org/foo/bar",
		href = "http://example.org/a/b/c",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/a/b/c",
		search = "",
		hash = "",
	},
	{
		input = "/a/ /c",
		base = "http://example.org/foo/bar",
		href = "http://example.org/a/%2520/c",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/a/%2520/c",
		search = "",
		hash = "",
	},
	{
		input = "/a%252fc",
		base = "http://example.org/foo/bar",
		href = "http://example.org/a%252fc",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/a%252fc",
		search = "",
		hash = "",
	},
	{
		input = "/a/%252f/c",
		base = "http://example.org/foo/bar",
		href = "http://example.org/a/%252f/c",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/a/%252f/c",
		search = "",
		hash = "",
	},
	{
		input = "#%CE%B2",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar#%25CE%25B2",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "#%25CE%25B2",
	},
	{
		input = "data:text/html,test#test",
		base = "http://example.org/foo/bar",
		href = "data:text/html,test#test",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "text/html,test",
		search = "",
		hash = "#test",
	},
	{
		input = "tel:1234567890",
		base = "http://example.org/foo/bar",
		href = "tel:1234567890",
		origin = "null",
		protocol = "tel:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "1234567890",
		search = "",
		hash = "",
	},
	"# Based on https://felixfbecker.github.io/whatwg-url-custom-host-repro/",
	{
		input = "ssh://example.com/foo/bar.git",
		base = "http://example.org/",
		href = "ssh://example.com/foo/bar.git",
		origin = "null",
		protocol = "ssh:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/bar.git",
		search = "",
		hash = "",
	},
	"# Based on http://trac.webkit.org/browser/trunk/LayoutTests/fast/url/file.html",
	{
		input = "file:c:%5Cfoo%5Cbar.html",
		base = "file:///tmp/mock/path",
		href = "file:///c:/foo/bar.html",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/c:/foo/bar.html",
		search = "",
		hash = "",
	},
	{
		input = "  File:c|////foo%5Cbar.html",
		base = "file:///tmp/mock/path",
		href = "file:///c:////foo/bar.html",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/c:////foo/bar.html",
		search = "",
		hash = "",
	},
	{
		input = "C|/foo/bar",
		base = "file:///tmp/mock/path",
		href = "file:///C:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "/C|%5Cfoo%5Cbar",
		base = "file:///tmp/mock/path",
		href = "file:///C:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "//C|/foo/bar",
		base = "file:///tmp/mock/path",
		href = "file:///C:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "//server/file",
		base = "file:///tmp/mock/path",
		href = "file://server/file",
		protocol = "file:",
		username = "",
		password = "",
		host = "server",
		hostname = "server",
		port = "",
		pathname = "/file",
		search = "",
		hash = "",
	},
	{
		input = "%5C%5Cserver%5Cfile",
		base = "file:///tmp/mock/path",
		href = "file://server/file",
		protocol = "file:",
		username = "",
		password = "",
		host = "server",
		hostname = "server",
		port = "",
		pathname = "/file",
		search = "",
		hash = "",
	},
	{
		input = "/%5Cserver/file",
		base = "file:///tmp/mock/path",
		href = "file://server/file",
		protocol = "file:",
		username = "",
		password = "",
		host = "server",
		hostname = "server",
		port = "",
		pathname = "/file",
		search = "",
		hash = "",
	},
	{
		input = "file:///foo/bar.txt",
		base = "file:///tmp/mock/path",
		href = "file:///foo/bar.txt",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/foo/bar.txt",
		search = "",
		hash = "",
	},
	{
		input = "file:///home/me",
		base = "file:///tmp/mock/path",
		href = "file:///home/me",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/home/me",
		search = "",
		hash = "",
	},
	{
		input = "//",
		base = "file:///tmp/mock/path",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///",
		base = "file:///tmp/mock/path",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///test",
		base = "file:///tmp/mock/path",
		href = "file:///test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "file://test",
		base = "file:///tmp/mock/path",
		href = "file://test/",
		protocol = "file:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file://localhost",
		base = "file:///tmp/mock/path",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file://localhost/",
		base = "file:///tmp/mock/path",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file://localhost/test",
		base = "file:///tmp/mock/path",
		href = "file:///test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "test",
		base = "file:///tmp/mock/path",
		href = "file:///tmp/mock/test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/tmp/mock/test",
		search = "",
		hash = "",
	},
	{
		input = "file:test",
		base = "file:///tmp/mock/path",
		href = "file:///tmp/mock/test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/tmp/mock/test",
		search = "",
		hash = "",
	},
	{
		input = "file:///w|m",
		base = nil,
		href = "file:///w|m",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/w|m",
		search = "",
		hash = "",
	},
	{
		input = "file:///w||m",
		base = nil,
		href = "file:///w||m",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/w||m",
		search = "",
		hash = "",
	},
	{
		input = "file:///w|/m",
		base = nil,
		href = "file:///w:/m",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/w:/m",
		search = "",
		hash = "",
	},
	{
		input = "file:C|/m/",
		base = nil,
		href = "file:///C:/m/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/m/",
		search = "",
		hash = "",
	},
	{
		input = "file:C||/m/",
		base = nil,
		href = "file:///C||/m/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C||/m/",
		search = "",
		hash = "",
	},
	"# Based on http://trac.webkit.org/browser/trunk/LayoutTests/fast/url/script-tests/path.js",
	{
		input = "http://example.com/././foo",
		base = nil,
		href = "http://example.com/foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/./.foo",
		base = nil,
		href = "http://example.com/.foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/.foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/.",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/./",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar/..",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar/../",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/..bar",
		base = nil,
		href = "http://example.com/foo/..bar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/..bar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar/../ton",
		base = nil,
		href = "http://example.com/foo/ton",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/ton",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar/../ton/../../a",
		base = nil,
		href = "http://example.com/a",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/a",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/../../..",
		base = nil,
		href = "http://example.com/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/../../../ton",
		base = nil,
		href = "http://example.com/ton",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/ton",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/%252e",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/%252e%252",
		base = nil,
		href = "http://example.com/foo/%252e%252",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/%252e%252",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/%252e./%252e%252e/.%252e/%252e.bar",
		base = nil,
		href = "http://example.com/%252e.bar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%252e.bar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com////../..",
		base = nil,
		href = "http://example.com//",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar//../..",
		base = nil,
		href = "http://example.com/foo/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo/bar//..",
		base = nil,
		href = "http://example.com/foo/bar/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo/bar/",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo",
		base = nil,
		href = "http://example.com/foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%2520foo",
		base = nil,
		href = "http://example.com/%2520foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%2520foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%25",
		base = nil,
		href = "http://example.com/foo%25",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%25",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%252",
		base = nil,
		href = "http://example.com/foo%252",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%252",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%252zbar",
		base = nil,
		href = "http://example.com/foo%252zbar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%252zbar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%252%C3%82%C2%A9zbar",
		base = nil,
		href = "http://example.com/foo%252%25C3%2582%25C2%25A9zbar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%252%25C3%2582%25C2%25A9zbar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%2541%257a",
		base = nil,
		href = "http://example.com/foo%2541%257a",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%2541%257a",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%09%C2%91%2591",
		base = nil,
		href = "http://example.com/foo%25C2%2591%2591",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%25C2%2591%2591",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%2500%2551",
		base = nil,
		href = "http://example.com/foo%2500%2551",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foo%2500%2551",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/(%2528:%253A%2529)",
		base = nil,
		href = "http://example.com/(%2528:%253A%2529)",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/(%2528:%253A%2529)",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%253A%253a%253C%253c",
		base = nil,
		href = "http://example.com/%253A%253a%253C%253c",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%253A%253a%253C%253c",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/foo%09bar",
		base = nil,
		href = "http://example.com/foobar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/foobar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com%5C%5Cfoo%5C%5Cbar",
		base = nil,
		href = "http://example.com//foo//bar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "//foo//bar",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%257Ffp3%253Eju%253Dduvgw%253Dd",
		base = nil,
		href = "http://example.com/%257Ffp3%253Eju%253Dduvgw%253Dd",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%257Ffp3%253Eju%253Dduvgw%253Dd",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/@asdf%2540",
		base = nil,
		href = "http://example.com/@asdf%2540",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/@asdf%2540",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%E4%BD%A0%E5%A5%BD%E4%BD%A0%E5%A5%BD",
		base = nil,
		href = "http://example.com/%25E4%25BD%25A0%25E5%25A5%25BD%25E4%25BD%25A0%25E5%25A5%25BD",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%25E4%25BD%25A0%25E5%25A5%25BD%25E4%25BD%25A0%25E5%25A5%25BD",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%E2%80%A5/foo",
		base = nil,
		href = "http://example.com/%25E2%2580%25A5/foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%25E2%2580%25A5/foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%EF%BB%BF/foo",
		base = nil,
		href = "http://example.com/%25EF%25BB%25BF/foo",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%25EF%25BB%25BF/foo",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%E2%80%AE/foo/%E2%80%AD/bar",
		base = nil,
		href = "http://example.com/%25E2%2580%25AE/foo/%25E2%2580%25AD/bar",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%25E2%2580%25AE/foo/%25E2%2580%25AD/bar",
		search = "",
		hash = "",
	},
	"# Based on http://trac.webkit.org/browser/trunk/LayoutTests/fast/url/script-tests/relative.js",
	{
		input = "http://www.google.com/foo?bar=baz#",
		base = nil,
		href = "http://www.google.com/foo?bar=baz#",
		origin = "http://www.google.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.google.com",
		hostname = "www.google.com",
		port = "",
		pathname = "/foo",
		search = "?bar=baz",
		hash = "",
	},
	{
		input = "http://www.google.com/foo?bar=baz# %C2%BB",
		base = nil,
		href = "http://www.google.com/foo?bar=baz#%2520%25C2%25BB",
		origin = "http://www.google.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.google.com",
		hostname = "www.google.com",
		port = "",
		pathname = "/foo",
		search = "?bar=baz",
		hash = "#%2520%25C2%25BB",
	},
	{
		input = "data:test# %C2%BB",
		base = nil,
		href = "data:test#%2520%25C2%25BB",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "test",
		search = "",
		hash = "#%2520%25C2%25BB",
	},
	{
		input = "http://www.google.com",
		base = nil,
		href = "http://www.google.com/",
		origin = "http://www.google.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.google.com",
		hostname = "www.google.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://192.0x00A80001",
		base = nil,
		href = "http://192.168.0.1/",
		origin = "http://192.168.0.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.0.1",
		hostname = "192.168.0.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://www/foo%252Ehtml",
		base = nil,
		href = "http://www/foo%252Ehtml",
		origin = "http://www",
		protocol = "http:",
		username = "",
		password = "",
		host = "www",
		hostname = "www",
		port = "",
		pathname = "/foo%252Ehtml",
		search = "",
		hash = "",
	},
	{
		input = "http://www/foo/%252E/html",
		base = nil,
		href = "http://www/foo/html",
		origin = "http://www",
		protocol = "http:",
		username = "",
		password = "",
		host = "www",
		hostname = "www",
		port = "",
		pathname = "/foo/html",
		search = "",
		hash = "",
	},
	{
		input = "http://user:pass@/",
		base = nil,
		failure = true,
	},
	{
		input = "http://%2525DOMAIN:foobar@foodomain.com/",
		base = nil,
		href = "http://%2525DOMAIN:foobar@foodomain.com/",
		origin = "http://foodomain.com",
		protocol = "http:",
		username = "%2525DOMAIN",
		password = "foobar",
		host = "foodomain.com",
		hostname = "foodomain.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:%5C%5Cwww.google.com%5Cfoo",
		base = nil,
		href = "http://www.google.com/foo",
		origin = "http://www.google.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.google.com",
		hostname = "www.google.com",
		port = "",
		pathname = "/foo",
		search = "",
		hash = "",
	},
	{
		input = "http://foo:80/",
		base = nil,
		href = "http://foo/",
		origin = "http://foo",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://foo:81/",
		base = nil,
		href = "http://foo:81/",
		origin = "http://foo:81",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo:81",
		hostname = "foo",
		port = "81",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "httpa://foo:80/",
		base = nil,
		href = "httpa://foo:80/",
		origin = "null",
		protocol = "httpa:",
		username = "",
		password = "",
		host = "foo:80",
		hostname = "foo",
		port = "80",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://foo:-80/",
		base = nil,
		failure = true,
	},
	{
		input = "https://foo:443/",
		base = nil,
		href = "https://foo/",
		origin = "https://foo",
		protocol = "https:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https://foo:80/",
		base = nil,
		href = "https://foo:80/",
		origin = "https://foo:80",
		protocol = "https:",
		username = "",
		password = "",
		host = "foo:80",
		hostname = "foo",
		port = "80",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ftp://foo:21/",
		base = nil,
		href = "ftp://foo/",
		origin = "ftp://foo",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ftp://foo:80/",
		base = nil,
		href = "ftp://foo:80/",
		origin = "ftp://foo:80",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "foo:80",
		hostname = "foo",
		port = "80",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "gopher://foo:70/",
		base = nil,
		href = "gopher://foo:70/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "foo:70",
		hostname = "foo",
		port = "70",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "gopher://foo:443/",
		base = nil,
		href = "gopher://foo:443/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "foo:443",
		hostname = "foo",
		port = "443",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ws://foo:80/",
		base = nil,
		href = "ws://foo/",
		origin = "ws://foo",
		protocol = "ws:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ws://foo:81/",
		base = nil,
		href = "ws://foo:81/",
		origin = "ws://foo:81",
		protocol = "ws:",
		username = "",
		password = "",
		host = "foo:81",
		hostname = "foo",
		port = "81",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ws://foo:443/",
		base = nil,
		href = "ws://foo:443/",
		origin = "ws://foo:443",
		protocol = "ws:",
		username = "",
		password = "",
		host = "foo:443",
		hostname = "foo",
		port = "443",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ws://foo:815/",
		base = nil,
		href = "ws://foo:815/",
		origin = "ws://foo:815",
		protocol = "ws:",
		username = "",
		password = "",
		host = "foo:815",
		hostname = "foo",
		port = "815",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss://foo:80/",
		base = nil,
		href = "wss://foo:80/",
		origin = "wss://foo:80",
		protocol = "wss:",
		username = "",
		password = "",
		host = "foo:80",
		hostname = "foo",
		port = "80",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss://foo:81/",
		base = nil,
		href = "wss://foo:81/",
		origin = "wss://foo:81",
		protocol = "wss:",
		username = "",
		password = "",
		host = "foo:81",
		hostname = "foo",
		port = "81",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss://foo:443/",
		base = nil,
		href = "wss://foo/",
		origin = "wss://foo",
		protocol = "wss:",
		username = "",
		password = "",
		host = "foo",
		hostname = "foo",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss://foo:815/",
		base = nil,
		href = "wss://foo:815/",
		origin = "wss://foo:815",
		protocol = "wss:",
		username = "",
		password = "",
		host = "foo:815",
		hostname = "foo",
		port = "815",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/example.com/",
		base = nil,
		href = "http://example.com/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ftp:/example.com/",
		base = nil,
		href = "ftp://example.com/",
		origin = "ftp://example.com",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https:/example.com/",
		base = nil,
		href = "https://example.com/",
		origin = "https://example.com",
		protocol = "https:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "madeupscheme:/example.com/",
		base = nil,
		href = "madeupscheme:/example.com/",
		origin = "null",
		protocol = "madeupscheme:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "file:/example.com/",
		base = nil,
		href = "file:///example.com/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ftps:/example.com/",
		base = nil,
		href = "ftps:/example.com/",
		origin = "null",
		protocol = "ftps:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "gopher:/example.com/",
		base = nil,
		href = "gopher:/example.com/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ws:/example.com/",
		base = nil,
		href = "ws://example.com/",
		origin = "ws://example.com",
		protocol = "ws:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss:/example.com/",
		base = nil,
		href = "wss://example.com/",
		origin = "wss://example.com",
		protocol = "wss:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "data:/example.com/",
		base = nil,
		href = "data:/example.com/",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "javascript:/example.com/",
		base = nil,
		href = "javascript:/example.com/",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "mailto:/example.com/",
		base = nil,
		href = "mailto:/example.com/",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/example.com/",
		search = "",
		hash = "",
	},
	{
		input = "http:example.com/",
		base = nil,
		href = "http://example.com/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ftp:example.com/",
		base = nil,
		href = "ftp://example.com/",
		origin = "ftp://example.com",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https:example.com/",
		base = nil,
		href = "https://example.com/",
		origin = "https://example.com",
		protocol = "https:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "madeupscheme:example.com/",
		base = nil,
		href = "madeupscheme:example.com/",
		origin = "null",
		protocol = "madeupscheme:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ftps:example.com/",
		base = nil,
		href = "ftps:example.com/",
		origin = "null",
		protocol = "ftps:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "gopher:example.com/",
		base = nil,
		href = "gopher:example.com/",
		origin = "null",
		protocol = "gopher:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "ws:example.com/",
		base = nil,
		href = "ws://example.com/",
		origin = "ws://example.com",
		protocol = "ws:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "wss:example.com/",
		base = nil,
		href = "wss://example.com/",
		origin = "wss://example.com",
		protocol = "wss:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "data:example.com/",
		base = nil,
		href = "data:example.com/",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "javascript:example.com/",
		base = nil,
		href = "javascript:example.com/",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	{
		input = "mailto:example.com/",
		base = nil,
		href = "mailto:example.com/",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "example.com/",
		search = "",
		hash = "",
	},
	"# Based on http://trac.webkit.org/browser/trunk/LayoutTests/fast/url/segments-userinfo-vs-host.html",
	{
		input = "http:@www.example.com",
		base = nil,
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/@www.example.com",
		base = nil,
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://@www.example.com",
		base = nil,
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:a:b@www.example.com",
		base = nil,
		href = "http://a:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/a:b@www.example.com",
		base = nil,
		href = "http://a:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://a:b@www.example.com",
		base = nil,
		href = "http://a:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://@pple.com",
		base = nil,
		href = "http://pple.com/",
		origin = "http://pple.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "pple.com",
		hostname = "pple.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http::b@www.example.com",
		base = nil,
		href = "http://:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/:b@www.example.com",
		base = nil,
		href = "http://:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://:b@www.example.com",
		base = nil,
		href = "http://:b@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "b",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/:@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http://user@/www.example.com",
		base = nil,
		failure = true,
	},
	{
		input = "http:@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http:/@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http://@/www.example.com",
		base = nil,
		failure = true,
	},
	{
		input = "https:@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http:a:b@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http:/a:b@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http://a:b@/www.example.com",
		base = nil,
		failure = true,
	},
	{
		input = "http::@/www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http:a:@www.example.com",
		base = nil,
		href = "http://a@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:/a:@www.example.com",
		base = nil,
		href = "http://a@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://a:@www.example.com",
		base = nil,
		href = "http://a@www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "a",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://www.@pple.com",
		base = nil,
		href = "http://www.@pple.com/",
		origin = "http://pple.com",
		protocol = "http:",
		username = "www.",
		password = "",
		host = "pple.com",
		hostname = "pple.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http:@:www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http:/@:www.example.com",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "http://@:www.example.com",
		base = nil,
		failure = true,
	},
	{
		input = "http://:@www.example.com",
		base = nil,
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# Others",
	{
		input = "/",
		base = "http://www.example.com/test",
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "/test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/test.txt",
		search = "",
		hash = "",
	},
	{
		input = ".",
		base = "http://www.example.com/test",
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "..",
		base = "http://www.example.com/test",
		href = "http://www.example.com/",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "./test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "../test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "../aaa/test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/aaa/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/aaa/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "../../test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "%E4%B8%AD/test.txt",
		base = "http://www.example.com/test",
		href = "http://www.example.com/%25E4%25B8%25AD/test.txt",
		origin = "http://www.example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example.com",
		hostname = "www.example.com",
		port = "",
		pathname = "/%25E4%25B8%25AD/test.txt",
		search = "",
		hash = "",
	},
	{
		input = "http://www.example2.com",
		base = "http://www.example.com/test",
		href = "http://www.example2.com/",
		origin = "http://www.example2.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example2.com",
		hostname = "www.example2.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "//www.example2.com",
		base = "http://www.example.com/test",
		href = "http://www.example2.com/",
		origin = "http://www.example2.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.example2.com",
		hostname = "www.example2.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file:...",
		base = "http://www.example.com/test",
		href = "file:///...",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/...",
		search = "",
		hash = "",
	},
	{
		input = "file:..",
		base = "http://www.example.com/test",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file:a",
		base = "http://www.example.com/test",
		href = "file:///a",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/a",
		search = "",
		hash = "",
	},
	{
		input = "file:.",
		base = nil,
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file:.",
		base = "http://www.example.com/test",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# Based on http://trac.webkit.org/browser/trunk/LayoutTests/fast/url/host.html",
	"Basic canonicalization, uppercase should be converted to lowercase",
	{
		input = "http://ExAmPlE.CoM",
		base = "http://other.com/",
		href = "http://example.com/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://example example.com",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://Goo%2520 goo%257C|.com",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[:]",
		base = "http://other.com/",
		failure = true,
	},
	"U+3000 is mapped to U+0020 (space) which is disallowed",
	{
		input = "http://GOO%C2%A0%E3%80%80goo.com",
		base = "http://other.com/",
		failure = true,
	},
	"Other types of space (no-break, zero-width, zero-width-no-break) are name-prepped away to nothing. U+200B, U+2060, and U+FEFF, are ignored",
	{
		input = "http://GOO%E2%80%8B%E2%81%A0%EF%BB%BFgoo.com",
		base = "http://other.com/",
		href = "http://googoo.com/",
		origin = "http://googoo.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "googoo.com",
		hostname = "googoo.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Leading and trailing C0 control or space",
	{
		input = "%00%1B%04%12 http://example.com/%1F %0D ",
		base = nil,
		href = "http://example.com/",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Ideographic full stop (full-width period for Chinese, etc.) should be treated as a dot. U+3002 is mapped to U+002E (dot)",
	{
		input = "http://www.foo%E3%80%82bar.com",
		base = "http://other.com/",
		href = "http://www.foo.bar.com/",
		origin = "http://www.foo.bar.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "www.foo.bar.com",
		hostname = "www.foo.bar.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Invalid unicode characters should fail... U+FDD0 is disallowed; %ef%b7%90 is U+FDD0",
	{
		input = "http://%EF%B7%90zyx.com",
		base = "http://other.com/",
		failure = true,
	},
	"This is the same as previous but escaped",
	{
		input = "http://%25ef%25b7%2590zyx.com",
		base = "http://other.com/",
		failure = true,
	},
	"U+FFFD",
	{
		input = "https://%EF%BF%BD",
		base = nil,
		failure = true,
	},
	{
		input = "https://%25EF%25BF%25BD",
		base = nil,
		failure = true,
	},
	{
		input = "https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD",
		base = nil,
		href = "https://x/%25EF%25BF%25BD?%25EF%25BF%25BD#%25EF%25BF%25BD",
		origin = "https://x",
		protocol = "https:",
		username = "",
		password = "",
		host = "x",
		hostname = "x",
		port = "",
		pathname = "/%25EF%25BF%25BD",
		search = "?%25EF%25BF%25BD",
		hash = "#%25EF%25BF%25BD",
	},
	"Domain is ASCII, but a label is invalid IDNA",
	{
		input = "http://a.b.c.xn--pokxncvks",
		base = nil,
		failure = true,
	},
	{
		input = "http://10.0.0.xn--pokxncvks",
		base = nil,
		failure = true,
	},
	"IDNA labels should be matched case-insensitively",
	{
		input = "http://a.b.c.XN--pokxncvks",
		base = nil,
		failure = true,
	},
	{
		input = "http://a.b.c.Xn--pokxncvks",
		base = nil,
		failure = true,
	},
	{
		input = "http://10.0.0.XN--pokxncvks",
		base = nil,
		failure = true,
	},
	{
		input = "http://10.0.0.xN--pokxncvks",
		base = nil,
		failure = true,
	},
	"Test name prepping, fullwidth input should be converted to ASCII and NOT IDN-ized. This is 'Go' in fullwidth UTF-8/UTF-16.",
	{
		input = "http://%EF%BC%A7%EF%BD%8F.com",
		base = "http://other.com/",
		href = "http://go.com/",
		origin = "http://go.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "go.com",
		hostname = "go.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"URL spec forbids the following. https://www.w3.org/Bugs/Public/show_bug.cgi?id=24257",
	{
		input = "http://%EF%BC%85%EF%BC%94%EF%BC%91.com",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://%25ef%25bc%2585%25ef%25bc%2594%25ef%25bc%2591.com",
		base = "http://other.com/",
		failure = true,
	},
	"...%00 in fullwidth should fail (also as escaped UTF-8 input)",
	{
		input = "http://%EF%BC%85%EF%BC%90%EF%BC%90.com",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://%25ef%25bc%2585%25ef%25bc%2590%25ef%25bc%2590.com",
		base = "http://other.com/",
		failure = true,
	},
	"Basic IDN support, UTF-8 and UTF-16 input should be converted to IDN",
	{
		input = "http://%E4%BD%A0%E5%A5%BD%E4%BD%A0%E5%A5%BD",
		base = "http://other.com/",
		href = "http://xn--6qqa088eba/",
		origin = "http://xn--6qqa088eba",
		protocol = "http:",
		username = "",
		password = "",
		host = "xn--6qqa088eba",
		hostname = "xn--6qqa088eba",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https://fa%C3%9F.ExAmPlE/",
		base = nil,
		href = "https://xn--fa-hia.example/",
		origin = "https://xn--fa-hia.example",
		protocol = "https:",
		username = "",
		password = "",
		host = "xn--fa-hia.example",
		hostname = "xn--fa-hia.example",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "sc://fa%C3%9F.ExAmPlE/",
		base = nil,
		href = "sc://fa%25C3%259F.ExAmPlE/",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "fa%25C3%259F.ExAmPlE",
		hostname = "fa%25C3%259F.ExAmPlE",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Invalid escaped characters should fail and the percents should be escaped. https://www.w3.org/Bugs/Public/show_bug.cgi?id=24191",
	{
		input = "http://%25zz%2566%25a.com",
		base = "http://other.com/",
		failure = true,
	},
	"If we get an invalid character that has been escaped.",
	{
		input = "http://%2525",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://hello%2500",
		base = "http://other.com/",
		failure = true,
	},
	"Escaped numbers should be treated like IP addresses if they are.",
	{
		input = "http://%2530%2578%2563%2530%252e%2530%2532%2535%2530.01",
		base = "http://other.com/",
		href = "http://192.168.0.1/",
		origin = "http://192.168.0.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.0.1",
		hostname = "192.168.0.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://%2530%2578%2563%2530%252e%2530%2532%2535%2530.01%252e",
		base = "http://other.com/",
		href = "http://192.168.0.1/",
		origin = "http://192.168.0.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.0.1",
		hostname = "192.168.0.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://192.168.0.257",
		base = "http://other.com/",
		failure = true,
	},
	"Invalid escaping in hosts causes failure",
	{
		input = "http://%253g%2578%2563%2530%252e%2530%2532%2535%2530%252E.01",
		base = "http://other.com/",
		failure = true,
	},
	"A space in a host causes failure",
	{
		input = "http://192.168.0.1 hello",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "https://x x:12",
		base = nil,
		failure = true,
	},
	"Fullwidth and escaped UTF-8 fullwidth should still be treated as IP",
	{
		input = "http://%EF%BC%90%EF%BC%B8%EF%BD%83%EF%BC%90%EF%BC%8E%EF%BC%90%EF%BC%92%EF%BC%95%EF%BC%90%EF%BC%8E%EF%BC%90%EF%BC%91",
		base = "http://other.com/",
		href = "http://192.168.0.1/",
		origin = "http://192.168.0.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.0.1",
		hostname = "192.168.0.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Domains with empty labels",
	{
		input = "http://./",
		base = nil,
		href = "http://./",
		origin = "http://.",
		protocol = "http:",
		username = "",
		password = "",
		host = ".",
		hostname = ".",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://../",
		base = nil,
		href = "http://../",
		origin = "http://..",
		protocol = "http:",
		username = "",
		password = "",
		host = "..",
		hostname = "..",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Non-special domains with empty labels",
	{
		input = "h://.",
		base = nil,
		href = "h://.",
		origin = "null",
		protocol = "h:",
		username = "",
		password = "",
		host = ".",
		hostname = ".",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	"Broken IPv6",
	{
		input = "http://[www.google.com]/",
		base = nil,
		failure = true,
	},
	{
		input = "http://[google.com]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::1.2.3.4x]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::1.2.3.]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::1.2.]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::.1.2]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::1.]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::.1]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://[::%2531]",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://%255B::1]",
		base = "http://other.com/",
		failure = true,
	},
	"Misc Unicode",
	{
		input = "http://foo:%F0%9F%92%A9@example.com/bar",
		base = "http://other.com/",
		href = "http://foo:%25F0%259F%2592%25A9@example.com/bar",
		origin = "http://example.com",
		protocol = "http:",
		username = "foo",
		password = "%25F0%259F%2592%25A9",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/bar",
		search = "",
		hash = "",
	},
	"# resolving a fragment against any scheme succeeds",
	{
		input = "#",
		base = "test:test",
		href = "test:test#",
		origin = "null",
		protocol = "test:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "test",
		search = "",
		hash = "",
	},
	{
		input = "#x",
		base = "mailto:x@x.com",
		href = "mailto:x@x.com#x",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "x@x.com",
		search = "",
		hash = "#x",
	},
	{
		input = "#x",
		base = "data:,",
		href = "data:,#x",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = ",",
		search = "",
		hash = "#x",
	},
	{
		input = "#x",
		base = "about:blank",
		href = "about:blank#x",
		origin = "null",
		protocol = "about:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "blank",
		search = "",
		hash = "#x",
	},
	{
		input = "#x:y",
		base = "about:blank",
		href = "about:blank#x:y",
		origin = "null",
		protocol = "about:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "blank",
		search = "",
		hash = "#x:y",
	},
	{
		input = "#",
		base = "test:test?test",
		href = "test:test?test#",
		origin = "null",
		protocol = "test:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "test",
		search = "?test",
		hash = "",
	},
	"# multiple @ in authority state",
	{
		input = "https://@test@test@example:800/",
		base = "http://doesnotmatter/",
		href = "https://%2540test%2540test@example:800/",
		origin = "https://example:800",
		protocol = "https:",
		username = "%2540test%2540test",
		password = "",
		host = "example:800",
		hostname = "example",
		port = "800",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https://@@@example",
		base = "http://doesnotmatter/",
		href = "https://%2540%2540@example/",
		origin = "https://example",
		protocol = "https:",
		username = "%2540%2540",
		password = "",
		host = "example",
		hostname = "example",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"non-az-09 characters",
	{
		input = "http://`{}:`{}@h/`{}?`{}",
		base = "http://doesnotmatter/",
		href = "http://%2560%257B%257D:%2560%257B%257D@h/%2560%257B%257D?`{}",
		origin = "http://h",
		protocol = "http:",
		username = "%2560%257B%257D",
		password = "%2560%257B%257D",
		host = "h",
		hostname = "h",
		port = "",
		pathname = "/%2560%257B%257D",
		search = "?`{}",
		hash = "",
	},
	"byte is ' and url is special",
	{
		input = "http://host/?'",
		base = nil,
		href = "http://host/?%2527",
		origin = "http://host",
		protocol = "http:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/",
		search = "?%2527",
		hash = "",
	},
	{
		input = "notspecial://host/?'",
		base = nil,
		href = "notspecial://host/?'",
		origin = "null",
		protocol = "notspecial:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/",
		search = "?'",
		hash = "",
	},
	"# Credentials in base",
	{
		input = "/some/path",
		base = "http://user@example.org/smth",
		href = "http://user@example.org/some/path",
		origin = "http://example.org",
		protocol = "http:",
		username = "user",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/some/path",
		search = "",
		hash = "",
	},
	{
		input = "",
		base = "http://user:pass@example.org:21/smth",
		href = "http://user:pass@example.org:21/smth",
		origin = "http://example.org:21",
		protocol = "http:",
		username = "user",
		password = "pass",
		host = "example.org:21",
		hostname = "example.org",
		port = "21",
		pathname = "/smth",
		search = "",
		hash = "",
	},
	{
		input = "/some/path",
		base = "http://user:pass@example.org:21/smth",
		href = "http://user:pass@example.org:21/some/path",
		origin = "http://example.org:21",
		protocol = "http:",
		username = "user",
		password = "pass",
		host = "example.org:21",
		hostname = "example.org",
		port = "21",
		pathname = "/some/path",
		search = "",
		hash = "",
	},
	"# a set of tests designed by zcorpan for relative URLs with unknown schemes",
	{
		input = "i",
		base = "sc:sd",
		failure = true,
	},
	{
		input = "i",
		base = "sc:sd/sd",
		failure = true,
	},
	{
		input = "i",
		base = "sc:/pa/pa",
		href = "sc:/pa/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/i",
		search = "",
		hash = "",
	},
	{
		input = "i",
		base = "sc://ho/pa",
		href = "sc://ho/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "ho",
		hostname = "ho",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "i",
		base = "sc:///pa/pa",
		href = "sc:///pa/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/i",
		search = "",
		hash = "",
	},
	{
		input = "../i",
		base = "sc:sd",
		failure = true,
	},
	{
		input = "../i",
		base = "sc:sd/sd",
		failure = true,
	},
	{
		input = "../i",
		base = "sc:/pa/pa",
		href = "sc:/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "../i",
		base = "sc://ho/pa",
		href = "sc://ho/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "ho",
		hostname = "ho",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "../i",
		base = "sc:///pa/pa",
		href = "sc:///i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "/i",
		base = "sc:sd",
		failure = true,
	},
	{
		input = "/i",
		base = "sc:sd/sd",
		failure = true,
	},
	{
		input = "/i",
		base = "sc:/pa/pa",
		href = "sc:/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "/i",
		base = "sc://ho/pa",
		href = "sc://ho/i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "ho",
		hostname = "ho",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "/i",
		base = "sc:///pa/pa",
		href = "sc:///i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/i",
		search = "",
		hash = "",
	},
	{
		input = "?i",
		base = "sc:sd",
		failure = true,
	},
	{
		input = "?i",
		base = "sc:sd/sd",
		failure = true,
	},
	{
		input = "?i",
		base = "sc:/pa/pa",
		href = "sc:/pa/pa?i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/pa",
		search = "?i",
		hash = "",
	},
	{
		input = "?i",
		base = "sc://ho/pa",
		href = "sc://ho/pa?i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "ho",
		hostname = "ho",
		port = "",
		pathname = "/pa",
		search = "?i",
		hash = "",
	},
	{
		input = "?i",
		base = "sc:///pa/pa",
		href = "sc:///pa/pa?i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/pa",
		search = "?i",
		hash = "",
	},
	{
		input = "#i",
		base = "sc:sd",
		href = "sc:sd#i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "sd",
		search = "",
		hash = "#i",
	},
	{
		input = "#i",
		base = "sc:sd/sd",
		href = "sc:sd/sd#i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "sd/sd",
		search = "",
		hash = "#i",
	},
	{
		input = "#i",
		base = "sc:/pa/pa",
		href = "sc:/pa/pa#i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/pa",
		search = "",
		hash = "#i",
	},
	{
		input = "#i",
		base = "sc://ho/pa",
		href = "sc://ho/pa#i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "ho",
		hostname = "ho",
		port = "",
		pathname = "/pa",
		search = "",
		hash = "#i",
	},
	{
		input = "#i",
		base = "sc:///pa/pa",
		href = "sc:///pa/pa#i",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pa/pa",
		search = "",
		hash = "#i",
	},
	"# make sure that relative URL logic works on known typically non-relative schemes too",
	{
		input = "about:/../",
		base = nil,
		href = "about:/",
		origin = "null",
		protocol = "about:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "data:/../",
		base = nil,
		href = "data:/",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "javascript:/../",
		base = nil,
		href = "javascript:/",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "mailto:/../",
		base = nil,
		href = "mailto:/",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# unknown schemes and their hosts",
	{
		input = "sc://%C3%B1.test/",
		base = nil,
		href = "sc://%25C3%25B1.test/",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1.test",
		hostname = "%25C3%25B1.test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "sc://%25/",
		base = nil,
		href = "sc://%25/",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25",
		hostname = "%25",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "sc://@/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://te@s:t@/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://:/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://:12/",
		base = nil,
		failure = true,
	},
	{
		input = "x",
		base = "sc://%C3%B1",
		href = "sc://%25C3%25B1/x",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "/x",
		search = "",
		hash = "",
	},
	"# unknown schemes and backslashes",
	{
		input = "sc:%5C../",
		base = nil,
		href = "sc:%5C../",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "%5C../",
		search = "",
		hash = "",
	},
	"# unknown scheme with path looking like a password",
	{
		input = "sc::a@example.net",
		base = nil,
		href = "sc::a@example.net",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = ":a@example.net",
		search = "",
		hash = "",
	},
	"# unknown scheme with bogus percent-encoding",
	{
		input = "wow:%25NBD",
		base = nil,
		href = "wow:%25NBD",
		origin = "null",
		protocol = "wow:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "%25NBD",
		search = "",
		hash = "",
	},
	{
		input = "wow:%251G",
		base = nil,
		href = "wow:%251G",
		origin = "null",
		protocol = "wow:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "%251G",
		search = "",
		hash = "",
	},
	"# unknown scheme with non-URL characters",
	{
		input = "wow:%EF%BF%BF",
		base = nil,
		href = "wow:%25EF%25BF%25BF",
		origin = "null",
		protocol = "wow:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "%25EF%25BF%25BF",
		search = "",
		hash = "",
	},
	{
		input = "http://example.com/%EF%BF%BD%F0%90%9F%BE%EF%BF%BD%EF%B7%90%EF%B7%8F%EF%B7%AF%EF%B7%B0%EF%BF%BE%EF%BF%BF?%EF%BF%BD%F0%90%9F%BE%EF%BF%BD%EF%B7%90%EF%B7%8F%EF%B7%AF%EF%B7%B0%EF%BF%BE%EF%BF%BF",
		base = nil,
		href = "http://example.com/%25EF%25BF%25BD%25F0%2590%259F%25BE%25EF%25BF%25BD%25EF%25B7%2590%25EF%25B7%258F%25EF%25B7%25AF%25EF%25B7%25B0%25EF%25BF%25BE%25EF%25BF%25BF?%25EF%25BF%25BD%25F0%2590%259F%25BE%25EF%25BF%25BD%25EF%25B7%2590%25EF%25B7%258F%25EF%25B7%25AF%25EF%25B7%25B0%25EF%25BF%25BE%25EF%25BF%25BF",
		origin = "http://example.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.com",
		hostname = "example.com",
		port = "",
		pathname = "/%25EF%25BF%25BD%25F0%2590%259F%25BE%25EF%25BF%25BD%25EF%25B7%2590%25EF%25B7%258F%25EF%25B7%25AF%25EF%25B7%25B0%25EF%25BF%25BE%25EF%25BF%25BF",
		search = "?%25EF%25BF%25BD%25F0%2590%259F%25BE%25EF%25BF%25BD%25EF%25B7%2590%25EF%25B7%258F%25EF%25B7%25AF%25EF%25B7%25B0%25EF%25BF%25BE%25EF%25BF%25BF",
		hash = "",
	},
	"Forbidden host code points",
	{
		input = "sc://a%00b/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a b/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a<b",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a>b",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a[b/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a%5Cb/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a]b/",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a^b",
		base = nil,
		failure = true,
	},
	{
		input = "sc://a|b/",
		base = nil,
		failure = true,
	},
	"Forbidden host codepoints: tabs and newlines are removed during preprocessing",
	{
		input = "foo://ho%09st/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	{
		input = "foo://ho%0Ast/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	{
		input = "foo://ho%0Dst/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	"Forbidden domain code-points",
	{
		input = "http://a%00b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%01b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%02b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%03b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%04b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%05b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%06b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%07b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%08b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%0Bb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%0Cb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%0Eb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%0Fb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%10b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%11b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%12b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%13b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%14b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%15b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%16b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%17b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%18b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%19b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Ab/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Bb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Cb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Db/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Eb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%1Fb/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a%25b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a<b",
		base = nil,
		failure = true,
	},
	{
		input = "http://a>b",
		base = nil,
		failure = true,
	},
	{
		input = "http://a[b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a]b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://a^b",
		base = nil,
		failure = true,
	},
	{
		input = "http://a|b/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ab/",
		base = nil,
		failure = true,
	},
	"Forbidden domain codepoints: tabs and newlines are removed during preprocessing",
	{
		input = "http://ho%09st/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "http://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "http:",
		search = "",
		username = "",
	},
	{
		input = "http://ho%0Ast/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "http://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "http:",
		search = "",
		username = "",
	},
	{
		input = "http://ho%0Dst/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "http://host/",
		password = "",
		pathname = "/",
		port = "",
		protocol = "http:",
		search = "",
		username = "",
	},
	"Encoded forbidden domain codepoints in special URLs",
	{
		input = "http://ho%2500st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2501st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2502st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2503st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2504st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2505st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2506st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2507st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2508st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2509st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Ast/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Bst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Cst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Dst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Est/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%250Fst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2510st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2511st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2512st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2513st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2514st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2515st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2516st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2517st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2518st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2519st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Ast/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Bst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Cst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Dst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Est/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%251Fst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2520st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2523st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2525st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%252Fst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%253Ast/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%253Cst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%253Est/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%253Fst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%2540st/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%255Bst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%255Cst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%255Dst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%257Cst/",
		base = nil,
		failure = true,
	},
	{
		input = "http://ho%257Fst/",
		base = nil,
		failure = true,
	},
	"Allowed host/domain code points",
	{
		input = "http://!%22$&'()*+,-.;=_`{}~/",
		base = nil,
		href = "http://!%22$&'()*+,-.;=_`{}~/",
		origin = "http://!%22$&'()*+,-.;=_`{}~",
		protocol = "http:",
		username = "",
		password = "",
		host = "!%22$&'()*+,-.;=_`{}~",
		hostname = "!%22$&'()*+,-.;=_`{}~",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "sc://%01%02%03%04%05%06%07%08%0B%0C%0E%0F%10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F!%22$%25&'()*+,-.;=_`{}~/",
		base = nil,
		href = "sc://%2501%2502%2503%2504%2505%2506%2507%2508%250B%250C%250E%250F%2510%2511%2512%2513%2514%2515%2516%2517%2518%2519%251A%251B%251C%251D%251E%251F%257F!%22$%25&'()*+,-.;=_`{}~/",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%2501%2502%2503%2504%2505%2506%2507%2508%250B%250C%250E%250F%2510%2511%2512%2513%2514%2515%2516%2517%2518%2519%251A%251B%251C%251D%251E%251F%257F!%22$%25&'()*+,-.;=_`{}~",
		hostname = "%2501%2502%2503%2504%2505%2506%2507%2508%250B%250C%250E%250F%2510%2511%2512%2513%2514%2515%2516%2517%2518%2519%251A%251B%251C%251D%251E%251F%257F!%22$%25&'()*+,-.;=_`{}~",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# Hosts and percent-encoding",
	{
		input = "ftp://example.com%2580/",
		base = nil,
		failure = true,
	},
	{
		input = "ftp://example.com%25A0/",
		base = nil,
		failure = true,
	},
	{
		input = "https://example.com%2580/",
		base = nil,
		failure = true,
	},
	{
		input = "https://example.com%25A0/",
		base = nil,
		failure = true,
	},
	{
		input = "ftp://%25e2%2598%2583",
		base = nil,
		href = "ftp://xn--n3h/",
		origin = "ftp://xn--n3h",
		protocol = "ftp:",
		username = "",
		password = "",
		host = "xn--n3h",
		hostname = "xn--n3h",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "https://%25e2%2598%2583",
		base = nil,
		href = "https://xn--n3h/",
		origin = "https://xn--n3h",
		protocol = "https:",
		username = "",
		password = "",
		host = "xn--n3h",
		hostname = "xn--n3h",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# tests from jsdom/whatwg-url designed for code coverage",
	{
		input = "http://127.0.0.1:10100/relative_import.html",
		base = nil,
		href = "http://127.0.0.1:10100/relative_import.html",
		origin = "http://127.0.0.1:10100",
		protocol = "http:",
		username = "",
		password = "",
		host = "127.0.0.1:10100",
		hostname = "127.0.0.1",
		port = "10100",
		pathname = "/relative_import.html",
		search = "",
		hash = "",
	},
	{
		input = "http://facebook.com/?foo=%257B%2522abc%2522",
		base = nil,
		href = "http://facebook.com/?foo=%257B%2522abc%2522",
		origin = "http://facebook.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "facebook.com",
		hostname = "facebook.com",
		port = "",
		pathname = "/",
		search = "?foo=%257B%2522abc%2522",
		hash = "",
	},
	{
		input = "https://localhost:3000/jqueryui@1.2.3",
		base = nil,
		href = "https://localhost:3000/jqueryui@1.2.3",
		origin = "https://localhost:3000",
		protocol = "https:",
		username = "",
		password = "",
		host = "localhost:3000",
		hostname = "localhost",
		port = "3000",
		pathname = "/jqueryui@1.2.3",
		search = "",
		hash = "",
	},
	"# tab/LF/CR",
	{
		input = "h%09t%0At%0Dp://h%09o%0As%0Dt:9%090%0A0%0D0/p%09a%0At%0Dh?q%09u%0Ae%0Dry#f%09r%0Aa%0Dg",
		base = nil,
		href = "http://host:9000/path?query#frag",
		origin = "http://host:9000",
		protocol = "http:",
		username = "",
		password = "",
		host = "host:9000",
		hostname = "host",
		port = "9000",
		pathname = "/path",
		search = "?query",
		hash = "#frag",
	},
	"# Stringification of URL.searchParams",
	{
		input = "?a=b&c=d",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar?a=b&c=d",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "?a=b&c=d",
		searchParams = "a=b&c=d",
		hash = "",
	},
	{
		input = "??a=b&c=d",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar??a=b&c=d",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "??a=b&c=d",
		searchParams = "%253Fa=b&c=d",
		hash = "",
	},
	"# Scheme only",
	{
		input = "http:",
		base = "http://example.org/foo/bar",
		href = "http://example.org/foo/bar",
		origin = "http://example.org",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/foo/bar",
		search = "",
		searchParams = "",
		hash = "",
	},
	{
		input = "http:",
		base = "https://example.org/foo/bar",
		failure = true,
	},
	{
		input = "sc:",
		base = "https://example.org/foo/bar",
		href = "sc:",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "",
		search = "",
		searchParams = "",
		hash = "",
	},
	"# Percent encoding of fragments",
	{
		input = "http://foo.bar/baz?qux#foo%08bar",
		base = nil,
		href = "http://foo.bar/baz?qux#foo%2508bar",
		origin = "http://foo.bar",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.bar",
		hostname = "foo.bar",
		port = "",
		pathname = "/baz",
		search = "?qux",
		searchParams = "qux=",
		hash = "#foo%2508bar",
	},
	{
		input = "http://foo.bar/baz?qux#foo%22bar",
		base = nil,
		href = "http://foo.bar/baz?qux#foo%2522bar",
		origin = "http://foo.bar",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.bar",
		hostname = "foo.bar",
		port = "",
		pathname = "/baz",
		search = "?qux",
		searchParams = "qux=",
		hash = "#foo%2522bar",
	},
	{
		input = "http://foo.bar/baz?qux#foo<bar",
		base = nil,
		href = "http://foo.bar/baz?qux#foo%253Cbar",
		origin = "http://foo.bar",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.bar",
		hostname = "foo.bar",
		port = "",
		pathname = "/baz",
		search = "?qux",
		searchParams = "qux=",
		hash = "#foo%253Cbar",
	},
	{
		input = "http://foo.bar/baz?qux#foo>bar",
		base = nil,
		href = "http://foo.bar/baz?qux#foo%253Ebar",
		origin = "http://foo.bar",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.bar",
		hostname = "foo.bar",
		port = "",
		pathname = "/baz",
		search = "?qux",
		searchParams = "qux=",
		hash = "#foo%253Ebar",
	},
	{
		input = "http://foo.bar/baz?qux#foo`bar",
		base = nil,
		href = "http://foo.bar/baz?qux#foo%2560bar",
		origin = "http://foo.bar",
		protocol = "http:",
		username = "",
		password = "",
		host = "foo.bar",
		hostname = "foo.bar",
		port = "",
		pathname = "/baz",
		search = "?qux",
		searchParams = "qux=",
		hash = "#foo%2560bar",
	},
	"# IPv4 parsing (via https://github.com/nodejs/node/pull/10317)",
	{
		input = "http://1.2.3.4/",
		base = "http://other.com/",
		href = "http://1.2.3.4/",
		origin = "http://1.2.3.4",
		protocol = "http:",
		username = "",
		password = "",
		host = "1.2.3.4",
		hostname = "1.2.3.4",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://1.2.3.4./",
		base = "http://other.com/",
		href = "http://1.2.3.4/",
		origin = "http://1.2.3.4",
		protocol = "http:",
		username = "",
		password = "",
		host = "1.2.3.4",
		hostname = "1.2.3.4",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://192.168.257",
		base = "http://other.com/",
		href = "http://192.168.1.1/",
		origin = "http://192.168.1.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.1.1",
		hostname = "192.168.1.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://192.168.257.",
		base = "http://other.com/",
		href = "http://192.168.1.1/",
		origin = "http://192.168.1.1",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.1.1",
		hostname = "192.168.1.1",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://192.168.257.com",
		base = "http://other.com/",
		href = "http://192.168.257.com/",
		origin = "http://192.168.257.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "192.168.257.com",
		hostname = "192.168.257.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://256",
		base = "http://other.com/",
		href = "http://0.0.1.0/",
		origin = "http://0.0.1.0",
		protocol = "http:",
		username = "",
		password = "",
		host = "0.0.1.0",
		hostname = "0.0.1.0",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://256.com",
		base = "http://other.com/",
		href = "http://256.com/",
		origin = "http://256.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "256.com",
		hostname = "256.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://999999999",
		base = "http://other.com/",
		href = "http://59.154.201.255/",
		origin = "http://59.154.201.255",
		protocol = "http:",
		username = "",
		password = "",
		host = "59.154.201.255",
		hostname = "59.154.201.255",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://999999999.",
		base = "http://other.com/",
		href = "http://59.154.201.255/",
		origin = "http://59.154.201.255",
		protocol = "http:",
		username = "",
		password = "",
		host = "59.154.201.255",
		hostname = "59.154.201.255",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://999999999.com",
		base = "http://other.com/",
		href = "http://999999999.com/",
		origin = "http://999999999.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "999999999.com",
		hostname = "999999999.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://10000000000",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://10000000000.com",
		base = "http://other.com/",
		href = "http://10000000000.com/",
		origin = "http://10000000000.com",
		protocol = "http:",
		username = "",
		password = "",
		host = "10000000000.com",
		hostname = "10000000000.com",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://4294967295",
		base = "http://other.com/",
		href = "http://255.255.255.255/",
		origin = "http://255.255.255.255",
		protocol = "http:",
		username = "",
		password = "",
		host = "255.255.255.255",
		hostname = "255.255.255.255",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://4294967296",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://0xffffffff",
		base = "http://other.com/",
		href = "http://255.255.255.255/",
		origin = "http://255.255.255.255",
		protocol = "http:",
		username = "",
		password = "",
		host = "255.255.255.255",
		hostname = "255.255.255.255",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://0xffffffff1",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://256.256.256.256",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "https://0x.0x.0",
		base = nil,
		href = "https://0.0.0.0/",
		origin = "https://0.0.0.0",
		protocol = "https:",
		username = "",
		password = "",
		host = "0.0.0.0",
		hostname = "0.0.0.0",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"More IPv4 parsing (via https://github.com/jsdom/whatwg-url/issues/92)",
	{
		input = "https://0x100000000/test",
		base = nil,
		failure = true,
	},
	{
		input = "https://256.0.0.1/test",
		base = nil,
		failure = true,
	},
	"# file URLs containing percent-encoded Windows drive letters (shouldn't work)",
	{
		input = "file:///C%253A/",
		base = nil,
		href = "file:///C%253A/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C%253A/",
		search = "",
		hash = "",
	},
	{
		input = "file:///C%257C/",
		base = nil,
		href = "file:///C%257C/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C%257C/",
		search = "",
		hash = "",
	},
	{
		input = "file://%2543%253A",
		base = nil,
		failure = true,
	},
	{
		input = "file://%2543%257C",
		base = nil,
		failure = true,
	},
	{
		input = "file://%2543|",
		base = nil,
		failure = true,
	},
	{
		input = "file://C%257C",
		base = nil,
		failure = true,
	},
	{
		input = "file://%2543%257C/",
		base = nil,
		failure = true,
	},
	{
		input = "https://%2543%257C/",
		base = nil,
		failure = true,
	},
	{
		input = "asdf://%2543|/",
		base = nil,
		failure = true,
	},
	{
		input = "asdf://%2543%257C/",
		base = nil,
		href = "asdf://%2543%257C/",
		origin = "null",
		protocol = "asdf:",
		username = "",
		password = "",
		host = "%2543%257C",
		hostname = "%2543%257C",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# file URLs relative to other file URLs (via https://github.com/jsdom/whatwg-url/pull/60)",
	{
		input = "pix/submit.gif",
		base = "file:///C:/Users/Domenic/Dropbox/GitHub/tmpvar/jsdom/test/level2/html/files/anchor.html",
		href = "file:///C:/Users/Domenic/Dropbox/GitHub/tmpvar/jsdom/test/level2/html/files/pix/submit.gif",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/Users/Domenic/Dropbox/GitHub/tmpvar/jsdom/test/level2/html/files/pix/submit.gif",
		search = "",
		hash = "",
	},
	{
		input = "..",
		base = "file:///C:/",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "..",
		base = "file:///",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# More file URL tests by zcorpan and annevk",
	{
		input = "/",
		base = "file:///C:/a/b",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "/",
		base = "file://h/C:/a/b",
		href = "file://h/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "h",
		hostname = "h",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "/",
		base = "file://h/a/b",
		href = "file://h/",
		protocol = "file:",
		username = "",
		password = "",
		host = "h",
		hostname = "h",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "//d:",
		base = "file:///C:/a/b",
		href = "file:///d:",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/d:",
		search = "",
		hash = "",
	},
	{
		input = "//d:/..",
		base = "file:///C:/a/b",
		href = "file:///d:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/d:/",
		search = "",
		hash = "",
	},
	{
		input = "..",
		base = "file:///ab:/",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "..",
		base = "file:///1:/",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "",
		base = "file:///test?test#test",
		href = "file:///test?test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?test",
		hash = "",
	},
	{
		input = "file:",
		base = "file:///test?test#test",
		href = "file:///test?test",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?test",
		hash = "",
	},
	{
		input = "?x",
		base = "file:///test?test#test",
		href = "file:///test?x",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?x",
		hash = "",
	},
	{
		input = "file:?x",
		base = "file:///test?test#test",
		href = "file:///test?x",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?x",
		hash = "",
	},
	{
		input = "#x",
		base = "file:///test?test#test",
		href = "file:///test?test#x",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?test",
		hash = "#x",
	},
	{
		input = "file:#x",
		base = "file:///test?test#test",
		href = "file:///test?test#x",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?test",
		hash = "#x",
	},
	"# File URLs and many (back)slashes",
	{
		input = "file:%5C%5C//",
		base = nil,
		href = "file:////",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "file:%5C%5C%5C%5C",
		base = nil,
		href = "file:////",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "file:%5C%5C%5C%5C?fox",
		base = nil,
		href = "file:////?fox",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "?fox",
		hash = "",
	},
	{
		input = "file:%5C%5C%5C%5C#guppy",
		base = nil,
		href = "file:////#guppy",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "#guppy",
	},
	{
		input = "file://spider///",
		base = nil,
		href = "file://spider///",
		protocol = "file:",
		username = "",
		password = "",
		host = "spider",
		hostname = "spider",
		port = "",
		pathname = "///",
		search = "",
		hash = "",
	},
	{
		input = "file:%5C%5Clocalhost//",
		base = nil,
		href = "file:////",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "file:///localhost//cat",
		base = nil,
		href = "file:///localhost//cat",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/localhost//cat",
		search = "",
		hash = "",
	},
	{
		input = "file://%5C/localhost//cat",
		base = nil,
		href = "file:////localhost//cat",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//localhost//cat",
		search = "",
		hash = "",
	},
	{
		input = "file://localhost//a//../..//",
		base = nil,
		href = "file://///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "///",
		search = "",
		hash = "",
	},
	{
		input = "/////mouse",
		base = "file:///elephant",
		href = "file://///mouse",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "///mouse",
		search = "",
		hash = "",
	},
	{
		input = "%5C//pig",
		base = "file://lion/",
		href = "file:///pig",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/pig",
		search = "",
		hash = "",
	},
	{
		input = "%5C/localhost//pig",
		base = "file://lion/",
		href = "file:////pig",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//pig",
		search = "",
		hash = "",
	},
	{
		input = "//localhost//pig",
		base = "file://lion/",
		href = "file:////pig",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//pig",
		search = "",
		hash = "",
	},
	{
		input = "/..//localhost//pig",
		base = "file://lion/",
		href = "file://lion//localhost//pig",
		protocol = "file:",
		username = "",
		password = "",
		host = "lion",
		hostname = "lion",
		port = "",
		pathname = "//localhost//pig",
		search = "",
		hash = "",
	},
	{
		input = "file://",
		base = "file://ape/",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"# File URLs with non-empty hosts",
	{
		input = "/rooibos",
		base = "file://tea/",
		href = "file://tea/rooibos",
		protocol = "file:",
		username = "",
		password = "",
		host = "tea",
		hostname = "tea",
		port = "",
		pathname = "/rooibos",
		search = "",
		hash = "",
	},
	{
		input = "/?chai",
		base = "file://tea/",
		href = "file://tea/?chai",
		protocol = "file:",
		username = "",
		password = "",
		host = "tea",
		hostname = "tea",
		port = "",
		pathname = "/",
		search = "?chai",
		hash = "",
	},
	"# Windows drive letter handling with the 'file:' base URL",
	{
		input = "C|",
		base = "file://host/dir/file",
		href = "file://host/C:",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:",
		search = "",
		hash = "",
	},
	{
		input = "C|",
		base = "file://host/D:/dir1/dir2/file",
		href = "file://host/C:",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:",
		search = "",
		hash = "",
	},
	{
		input = "C|#",
		base = "file://host/dir/file",
		href = "file://host/C:#",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:",
		search = "",
		hash = "",
	},
	{
		input = "C|?",
		base = "file://host/dir/file",
		href = "file://host/C:?",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:",
		search = "",
		hash = "",
	},
	{
		input = "C|/",
		base = "file://host/dir/file",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "C|%0A/",
		base = "file://host/dir/file",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "C|%5C",
		base = "file://host/dir/file",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "C",
		base = "file://host/dir/file",
		href = "file://host/dir/C",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/dir/C",
		search = "",
		hash = "",
	},
	{
		input = "C|a",
		base = "file://host/dir/file",
		href = "file://host/dir/C|a",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/dir/C|a",
		search = "",
		hash = "",
	},
	"# Windows drive letter quirk in the file slash state",
	{
		input = "/c:/foo/bar",
		base = "file:///c:/baz/qux",
		href = "file:///c:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/c:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "/c|/foo/bar",
		base = "file:///c:/baz/qux",
		href = "file:///c:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/c:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "file:%5Cc:%5Cfoo%5Cbar",
		base = "file:///c:/baz/qux",
		href = "file:///c:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/c:/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "/c:/foo/bar",
		base = "file://host/path",
		href = "file://host/c:/foo/bar",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/c:/foo/bar",
		search = "",
		hash = "",
	},
	"# Do not drop the host in the presence of a drive letter",
	{
		input = "file://example.net/C:/",
		base = nil,
		href = "file://example.net/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "example.net",
		hostname = "example.net",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file://1.2.3.4/C:/",
		base = nil,
		href = "file://1.2.3.4/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "1.2.3.4",
		hostname = "1.2.3.4",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file://[1::8]/C:/",
		base = nil,
		href = "file://[1::8]/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "[1::8]",
		hostname = "[1::8]",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	"# Copy the host from the base URL in the following cases",
	{
		input = "C|/",
		base = "file://host/",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "/C:/",
		base = "file://host/",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file:C:/",
		base = "file://host/",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file:/C:/",
		base = "file://host/",
		href = "file://host/C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "host",
		hostname = "host",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	"# Copy the empty host from the input in the following cases",
	{
		input = "//C:/",
		base = "file://host/",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file://C:/",
		base = "file://host/",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "///C:/",
		base = "file://host/",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file:///C:/",
		base = "file://host/",
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	"# Windows drive letter quirk (no host)",
	{
		input = "file:/C|/",
		base = nil,
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	{
		input = "file://C|/",
		base = nil,
		href = "file:///C:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/C:/",
		search = "",
		hash = "",
	},
	"# file URLs without base URL by Rimas Misevičius",
	{
		input = "file:",
		base = nil,
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "file:?q=v",
		base = nil,
		href = "file:///?q=v",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "?q=v",
		hash = "",
	},
	{
		input = "file:#frag",
		base = nil,
		href = "file:///#frag",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "#frag",
	},
	"# file: drive letter cases from https://crbug.com/1078698",
	{
		input = "file:///Y:",
		base = nil,
		href = "file:///Y:",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/Y:",
		search = "",
		hash = "",
	},
	{
		input = "file:///Y:/",
		base = nil,
		href = "file:///Y:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/Y:/",
		search = "",
		hash = "",
	},
	{
		input = "file:///./Y",
		base = nil,
		href = "file:///Y",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/Y",
		search = "",
		hash = "",
	},
	{
		input = "file:///./Y:",
		base = nil,
		href = "file:///Y:",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/Y:",
		search = "",
		hash = "",
	},
	{
		input = "%5C%5C%5C.%5CY:",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	"# file: drive letter cases from https://crbug.com/1078698 but lowercased",
	{
		input = "file:///y:",
		base = nil,
		href = "file:///y:",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/y:",
		search = "",
		hash = "",
	},
	{
		input = "file:///y:/",
		base = nil,
		href = "file:///y:/",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/y:/",
		search = "",
		hash = "",
	},
	{
		input = "file:///./y",
		base = nil,
		href = "file:///y",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/y",
		search = "",
		hash = "",
	},
	{
		input = "file:///./y:",
		base = nil,
		href = "file:///y:",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/y:",
		search = "",
		hash = "",
	},
	{
		input = "%5C%5C%5C.%5Cy:",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	"# Additional file URL tests for (https://github.com/whatwg/url/issues/405)",
	{
		input = "file://localhost//a//../..//foo",
		base = nil,
		href = "file://///foo",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "///foo",
		search = "",
		hash = "",
	},
	{
		input = "file://localhost////foo",
		base = nil,
		href = "file://////foo",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "////foo",
		search = "",
		hash = "",
	},
	{
		input = "file:////foo",
		base = nil,
		href = "file:////foo",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//foo",
		search = "",
		hash = "",
	},
	{
		input = "file:///one/two",
		base = "file:///",
		href = "file:///one/two",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/one/two",
		search = "",
		hash = "",
	},
	{
		input = "file:////one/two",
		base = "file:///",
		href = "file:////one/two",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//one/two",
		search = "",
		hash = "",
	},
	{
		input = "//one/two",
		base = "file:///",
		href = "file://one/two",
		protocol = "file:",
		username = "",
		password = "",
		host = "one",
		hostname = "one",
		port = "",
		pathname = "/two",
		search = "",
		hash = "",
	},
	{
		input = "///one/two",
		base = "file:///",
		href = "file:///one/two",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/one/two",
		search = "",
		hash = "",
	},
	{
		input = "////one/two",
		base = "file:///",
		href = "file:////one/two",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//one/two",
		search = "",
		hash = "",
	},
	{
		input = "file:///.//",
		base = "file:////",
		href = "file:////",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	"File URL tests for https://github.com/whatwg/url/issues/549",
	{
		input = "file:.//p",
		base = nil,
		href = "file:////p",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//p",
		search = "",
		hash = "",
	},
	{
		input = "file:/.//p",
		base = nil,
		href = "file:////p",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//p",
		search = "",
		hash = "",
	},
	"# IPv6 tests",
	{
		input = "http://[1:0::]",
		base = "http://example.net/",
		href = "http://[1::]/",
		origin = "http://[1::]",
		protocol = "http:",
		username = "",
		password = "",
		host = "[1::]",
		hostname = "[1::]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://[0:1:2:3:4:5:6:7:8]",
		base = "http://example.net/",
		failure = true,
	},
	{
		input = "https://[0::0::0]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:.0]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:0:]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:1:2:3:4:5:6:7.0.0.0.1]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:1.00.0.0.0]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:1.290.0.0.0]",
		base = nil,
		failure = true,
	},
	{
		input = "https://[0:1.23.23]",
		base = nil,
		failure = true,
	},
	"# Empty host",
	{
		input = "http://?",
		base = nil,
		failure = true,
	},
	{
		input = "http://#",
		base = nil,
		failure = true,
	},
	"Port overflow (2^32 + 81)",
	{
		input = "http://f:4294967377/c",
		base = "http://example.org/",
		failure = true,
	},
	"Port overflow (2^64 + 81)",
	{
		input = "http://f:18446744073709551697/c",
		base = "http://example.org/",
		failure = true,
	},
	"Port overflow (2^128 + 81)",
	{
		input = "http://f:340282366920938463463374607431768211537/c",
		base = "http://example.org/",
		failure = true,
	},
	"# Non-special-URL path tests",
	{
		input = "sc://%C3%B1",
		base = nil,
		href = "sc://%25C3%25B1",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	{
		input = "sc://%C3%B1?x",
		base = nil,
		href = "sc://%25C3%25B1?x",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "",
		search = "?x",
		hash = "",
	},
	{
		input = "sc://%C3%B1#x",
		base = nil,
		href = "sc://%25C3%25B1#x",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "",
		search = "",
		hash = "#x",
	},
	{
		input = "#x",
		base = "sc://%C3%B1",
		href = "sc://%25C3%25B1#x",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "",
		search = "",
		hash = "#x",
	},
	{
		input = "?x",
		base = "sc://%C3%B1",
		href = "sc://%25C3%25B1?x",
		origin = "null",
		protocol = "sc:",
		username = "",
		password = "",
		host = "%25C3%25B1",
		hostname = "%25C3%25B1",
		port = "",
		pathname = "",
		search = "?x",
		hash = "",
	},
	{
		input = "sc://?",
		base = nil,
		href = "sc://?",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	{
		input = "sc://#",
		base = nil,
		href = "sc://#",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	{
		input = "///",
		base = "sc://x/",
		href = "sc:///",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "////",
		base = "sc://x/",
		href = "sc:////",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "////x/",
		base = "sc://x/",
		href = "sc:////x/",
		protocol = "sc:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//x/",
		search = "",
		hash = "",
	},
	{
		input = "tftp://foobar.com/someconfig;mode=netascii",
		base = nil,
		href = "tftp://foobar.com/someconfig;mode=netascii",
		origin = "null",
		protocol = "tftp:",
		username = "",
		password = "",
		host = "foobar.com",
		hostname = "foobar.com",
		port = "",
		pathname = "/someconfig;mode=netascii",
		search = "",
		hash = "",
	},
	{
		input = "telnet://user:pass@foobar.com:23/",
		base = nil,
		href = "telnet://user:pass@foobar.com:23/",
		origin = "null",
		protocol = "telnet:",
		username = "user",
		password = "pass",
		host = "foobar.com:23",
		hostname = "foobar.com",
		port = "23",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "ut2004://10.10.10.10:7777/Index.ut2",
		base = nil,
		href = "ut2004://10.10.10.10:7777/Index.ut2",
		origin = "null",
		protocol = "ut2004:",
		username = "",
		password = "",
		host = "10.10.10.10:7777",
		hostname = "10.10.10.10",
		port = "7777",
		pathname = "/Index.ut2",
		search = "",
		hash = "",
	},
	{
		input = "redis://foo:bar@somehost:6379/0?baz=bam&qux=baz",
		base = nil,
		href = "redis://foo:bar@somehost:6379/0?baz=bam&qux=baz",
		origin = "null",
		protocol = "redis:",
		username = "foo",
		password = "bar",
		host = "somehost:6379",
		hostname = "somehost",
		port = "6379",
		pathname = "/0",
		search = "?baz=bam&qux=baz",
		hash = "",
	},
	{
		input = "rsync://foo@host:911/sup",
		base = nil,
		href = "rsync://foo@host:911/sup",
		origin = "null",
		protocol = "rsync:",
		username = "foo",
		password = "",
		host = "host:911",
		hostname = "host",
		port = "911",
		pathname = "/sup",
		search = "",
		hash = "",
	},
	{
		input = "git://github.com/foo/bar.git",
		base = nil,
		href = "git://github.com/foo/bar.git",
		origin = "null",
		protocol = "git:",
		username = "",
		password = "",
		host = "github.com",
		hostname = "github.com",
		port = "",
		pathname = "/foo/bar.git",
		search = "",
		hash = "",
	},
	{
		input = "irc://myserver.com:6999/channel?passwd",
		base = nil,
		href = "irc://myserver.com:6999/channel?passwd",
		origin = "null",
		protocol = "irc:",
		username = "",
		password = "",
		host = "myserver.com:6999",
		hostname = "myserver.com",
		port = "6999",
		pathname = "/channel",
		search = "?passwd",
		hash = "",
	},
	{
		input = "dns://fw.example.org:9999/foo.bar.org?type=TXT",
		base = nil,
		href = "dns://fw.example.org:9999/foo.bar.org?type=TXT",
		origin = "null",
		protocol = "dns:",
		username = "",
		password = "",
		host = "fw.example.org:9999",
		hostname = "fw.example.org",
		port = "9999",
		pathname = "/foo.bar.org",
		search = "?type=TXT",
		hash = "",
	},
	{
		input = "ldap://localhost:389/ou=People,o=JNDITutorial",
		base = nil,
		href = "ldap://localhost:389/ou=People,o=JNDITutorial",
		origin = "null",
		protocol = "ldap:",
		username = "",
		password = "",
		host = "localhost:389",
		hostname = "localhost",
		port = "389",
		pathname = "/ou=People,o=JNDITutorial",
		search = "",
		hash = "",
	},
	{
		input = "git+https://github.com/foo/bar",
		base = nil,
		href = "git+https://github.com/foo/bar",
		origin = "null",
		protocol = "git+https:",
		username = "",
		password = "",
		host = "github.com",
		hostname = "github.com",
		port = "",
		pathname = "/foo/bar",
		search = "",
		hash = "",
	},
	{
		input = "urn:ietf:rfc:2648",
		base = nil,
		href = "urn:ietf:rfc:2648",
		origin = "null",
		protocol = "urn:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "ietf:rfc:2648",
		search = "",
		hash = "",
	},
	{
		input = "tag:joe@example.org,2001:foo/bar",
		base = nil,
		href = "tag:joe@example.org,2001:foo/bar",
		origin = "null",
		protocol = "tag:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "joe@example.org,2001:foo/bar",
		search = "",
		hash = "",
	},
	"Serialize /. in path",
	{
		input = "non-spec:/.//",
		base = nil,
		href = "non-spec:/.//",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "non-spec:/..//",
		base = nil,
		href = "non-spec:/.//",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "non-spec:/a/..//",
		base = nil,
		href = "non-spec:/.//",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//",
		search = "",
		hash = "",
	},
	{
		input = "non-spec:/.//path",
		base = nil,
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "non-spec:/..//path",
		base = nil,
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "non-spec:/a/..//path",
		base = nil,
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "/.//path",
		base = "non-spec:/p",
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "/..//path",
		base = "non-spec:/p",
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "..//path",
		base = "non-spec:/p",
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "a/..//path",
		base = "non-spec:/p",
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	{
		input = "",
		base = "non-spec:/..//p",
		href = "non-spec:/.//p",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//p",
		search = "",
		hash = "",
	},
	{
		input = "path",
		base = "non-spec:/..//p",
		href = "non-spec:/.//path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "//path",
		search = "",
		hash = "",
	},
	"Do not serialize /. in path",
	{
		input = "../path",
		base = "non-spec:/.//p",
		href = "non-spec:/path",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	"# percent encoded hosts in non-special-URLs",
	{
		input = "non-special://%25E2%2580%25A0/",
		base = nil,
		href = "non-special://%25E2%2580%25A0/",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "%25E2%2580%25A0",
		hostname = "%25E2%2580%25A0",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "non-special://H%254fSt/path",
		base = nil,
		href = "non-special://H%254fSt/path",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "H%254fSt",
		hostname = "H%254fSt",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	"# IPv6 in non-special-URLs",
	{
		input = "non-special://[1:2:0:0:5:0:0:0]/",
		base = nil,
		href = "non-special://[1:2:0:0:5::]/",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "[1:2:0:0:5::]",
		hostname = "[1:2:0:0:5::]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "non-special://[1:2:0:0:0:0:0:3]/",
		base = nil,
		href = "non-special://[1:2::3]/",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "[1:2::3]",
		hostname = "[1:2::3]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "non-special://[1:2::3]:80/",
		base = nil,
		href = "non-special://[1:2::3]:80/",
		protocol = "non-special:",
		username = "",
		password = "",
		host = "[1:2::3]:80",
		hostname = "[1:2::3]",
		port = "80",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "non-special://[:80/",
		base = nil,
		failure = true,
	},
	{
		input = "blob:https://example.com:443/",
		base = nil,
		href = "blob:https://example.com:443/",
		origin = "https://example.com",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "https://example.com:443/",
		search = "",
		hash = "",
	},
	{
		input = "blob:http://example.org:88/",
		base = nil,
		href = "blob:http://example.org:88/",
		origin = "http://example.org:88",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "http://example.org:88/",
		search = "",
		hash = "",
	},
	{
		input = "blob:d3958f5c-0777-0845-9dcf-2cb28783acaf",
		base = nil,
		href = "blob:d3958f5c-0777-0845-9dcf-2cb28783acaf",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "d3958f5c-0777-0845-9dcf-2cb28783acaf",
		search = "",
		hash = "",
	},
	{
		input = "blob:",
		base = nil,
		href = "blob:",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "",
		search = "",
		hash = "",
	},
	"blob: in blob:",
	{
		input = "blob:blob:",
		base = nil,
		href = "blob:blob:",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "blob:",
		search = "",
		hash = "",
	},
	{
		input = "blob:blob:https://example.org/",
		base = nil,
		href = "blob:blob:https://example.org/",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "blob:https://example.org/",
		search = "",
		hash = "",
	},
	"Non-http(s): in blob:",
	{
		input = "blob:about:blank",
		base = nil,
		href = "blob:about:blank",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "about:blank",
		search = "",
		hash = "",
	},
	{
		input = "blob:file://host/path",
		base = nil,
		href = "blob:file://host/path",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "file://host/path",
		search = "",
		hash = "",
	},
	{
		input = "blob:ftp://host/path",
		base = nil,
		href = "blob:ftp://host/path",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "ftp://host/path",
		search = "",
		hash = "",
	},
	{
		input = "blob:ws://example.org/",
		base = nil,
		href = "blob:ws://example.org/",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "ws://example.org/",
		search = "",
		hash = "",
	},
	{
		input = "blob:wss://example.org/",
		base = nil,
		href = "blob:wss://example.org/",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "wss://example.org/",
		search = "",
		hash = "",
	},
	"Percent-encoded http: in blob:",
	{
		input = "blob:http%253a//example.org/",
		base = nil,
		href = "blob:http%253a//example.org/",
		origin = "null",
		protocol = "blob:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "http%253a//example.org/",
		search = "",
		hash = "",
	},
	"Invalid IPv4 radix digits",
	{
		input = "http://0x7f.0.0.0x7g",
		base = nil,
		href = "http://0x7f.0.0.0x7g/",
		protocol = "http:",
		username = "",
		password = "",
		host = "0x7f.0.0.0x7g",
		hostname = "0x7f.0.0.0x7g",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://0X7F.0.0.0X7G",
		base = nil,
		href = "http://0x7f.0.0.0x7g/",
		protocol = "http:",
		username = "",
		password = "",
		host = "0x7f.0.0.0x7g",
		hostname = "0x7f.0.0.0x7g",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Invalid IPv4 portion of IPv6 address",
	{
		input = "http://[::127.0.0.0.1]",
		base = nil,
		failure = true,
	},
	"Uncompressed IPv6 addresses with 0",
	{
		input = "http://[0:1:0:1:0:1:0:1]",
		base = nil,
		href = "http://[0:1:0:1:0:1:0:1]/",
		protocol = "http:",
		username = "",
		password = "",
		host = "[0:1:0:1:0:1:0:1]",
		hostname = "[0:1:0:1:0:1:0:1]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "http://[1:0:1:0:1:0:1:0]",
		base = nil,
		href = "http://[1:0:1:0:1:0:1:0]/",
		protocol = "http:",
		username = "",
		password = "",
		host = "[1:0:1:0:1:0:1:0]",
		hostname = "[1:0:1:0:1:0:1:0]",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	"Percent-encoded query and fragment",
	{
		input = "http://example.org/test?%22",
		base = nil,
		href = "http://example.org/test?%2522",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%2522",
		hash = "",
	},
	{
		input = "http://example.org/test?#",
		base = nil,
		href = "http://example.org/test?#",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "http://example.org/test?<",
		base = nil,
		href = "http://example.org/test?%253C",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%253C",
		hash = "",
	},
	{
		input = "http://example.org/test?>",
		base = nil,
		href = "http://example.org/test?%253E",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%253E",
		hash = "",
	},
	{
		input = "http://example.org/test?%E2%8C%A3",
		base = nil,
		href = "http://example.org/test?%25E2%258C%25A3",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%25E2%258C%25A3",
		hash = "",
	},
	{
		input = "http://example.org/test?%2523%2523",
		base = nil,
		href = "http://example.org/test?%2523%2523",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%2523%2523",
		hash = "",
	},
	{
		input = "http://example.org/test?%25GH",
		base = nil,
		href = "http://example.org/test?%25GH",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?%25GH",
		hash = "",
	},
	{
		input = "http://example.org/test?a#%25EF",
		base = nil,
		href = "http://example.org/test?a#%25EF",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?a",
		hash = "#%25EF",
	},
	{
		input = "http://example.org/test?a#%25GH",
		base = nil,
		href = "http://example.org/test?a#%25GH",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?a",
		hash = "#%25GH",
	},
	"URLs that require a non-about:blank base. (Also serve as invalid base tests.)",
	{
		input = "a",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "a/",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "a//",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	"Bases that don't fail to parse but fail to be bases",
	{
		input = "test-a-colon.html",
		base = "a:",
		failure = true,
	},
	{
		input = "test-a-colon-b.html",
		base = "a:b",
		failure = true,
	},
	"Other base URL tests, that must succeed",
	{
		input = "test-a-colon-slash.html",
		base = "a:/",
		href = "a:/test-a-colon-slash.html",
		protocol = "a:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test-a-colon-slash.html",
		search = "",
		hash = "",
	},
	{
		input = "test-a-colon-slash-slash.html",
		base = "a://",
		href = "a:///test-a-colon-slash-slash.html",
		protocol = "a:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test-a-colon-slash-slash.html",
		search = "",
		hash = "",
	},
	{
		input = "test-a-colon-slash-b.html",
		base = "a:/b",
		href = "a:/test-a-colon-slash-b.html",
		protocol = "a:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test-a-colon-slash-b.html",
		search = "",
		hash = "",
	},
	{
		input = "test-a-colon-slash-slash-b.html",
		base = "a://b",
		href = "a://b/test-a-colon-slash-slash-b.html",
		protocol = "a:",
		username = "",
		password = "",
		host = "b",
		hostname = "b",
		port = "",
		pathname = "/test-a-colon-slash-slash-b.html",
		search = "",
		hash = "",
	},
	"Null code point in fragment",
	{
		input = "http://example.org/test?a#b%00c",
		base = nil,
		href = "http://example.org/test?a#b%2500c",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?a",
		hash = "#b%2500c",
	},
	{
		input = "non-spec://example.org/test?a#b%00c",
		base = nil,
		href = "non-spec://example.org/test?a#b%2500c",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/test",
		search = "?a",
		hash = "#b%2500c",
	},
	{
		input = "non-spec:/test?a#b%00c",
		base = nil,
		href = "non-spec:/test?a#b%2500c",
		protocol = "non-spec:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "?a",
		hash = "#b%2500c",
	},
	"First scheme char - not allowed: https://github.com/whatwg/url/issues/464",
	{
		input = "10.0.0.7:8080/foo.html",
		base = "file:///some/dir/bar.html",
		href = "file:///some/dir/10.0.0.7:8080/foo.html",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/some/dir/10.0.0.7:8080/foo.html",
		search = "",
		hash = "",
	},
	"Subsequent scheme chars - not allowed",
	{
		input = "a!@$*=/foo.html",
		base = "file:///some/dir/bar.html",
		href = "file:///some/dir/a!@$*=/foo.html",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/some/dir/a!@$*=/foo.html",
		search = "",
		hash = "",
	},
	"First and subsequent scheme chars - allowed",
	{
		input = "a1234567890-+.:foo/bar",
		base = "http://example.com/dir/file",
		href = "a1234567890-+.:foo/bar",
		protocol = "a1234567890-+.:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "foo/bar",
		search = "",
		hash = "",
	},
	"IDNA ignored code points in file URLs hosts",
	{
		input = "file://a%C2%ADb/p",
		base = nil,
		href = "file://ab/p",
		protocol = "file:",
		username = "",
		password = "",
		host = "ab",
		hostname = "ab",
		port = "",
		pathname = "/p",
		search = "",
		hash = "",
	},
	{
		input = "file://a%25C2%25ADb/p",
		base = nil,
		href = "file://ab/p",
		protocol = "file:",
		username = "",
		password = "",
		host = "ab",
		hostname = "ab",
		port = "",
		pathname = "/p",
		search = "",
		hash = "",
	},
	"IDNA hostnames which get mapped to 'localhost'",
	{
		input = "file://loC%F0%9D%90%80%F0%9D%90%8B%F0%9D%90%87%F0%9D%90%A8%F0%9D%90%AC%F0%9D%90%AD/usr/bin",
		base = nil,
		href = "file:///usr/bin",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/usr/bin",
		search = "",
		hash = "",
	},
	"Empty host after the domain to ASCII",
	{
		input = "file://%C2%AD/p",
		base = nil,
		failure = true,
	},
	{
		input = "file://%25C2%25AD/p",
		base = nil,
		failure = true,
	},
	{
		input = "file://xn--/p",
		base = nil,
		failure = true,
	},
	"https://bugzilla.mozilla.org/show_bug.cgi?id=1647058",
	{
		input = "#link",
		base = "https://example.org/##link",
		href = "https://example.org/#link",
		protocol = "https:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/",
		search = "",
		hash = "#link",
	},
	"UTF-8 percent-encode of C0 control percent-encode set and supersets",
	{
		input = "non-special:cannot-be-a-base-url-%00%01%1F%1E~%C2%80",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:cannot-be-a-base-url-%2500%2501%251F%251E~%257F%25C2%2580",
		origin = "null",
		password = "",
		pathname = "cannot-be-a-base-url-%2500%2501%251F%251E~%257F%25C2%2580",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "https://www.example.com/path{path.html?query'=query#fragment<fragment",
		base = nil,
		hash = "#fragment%253C%257Ffragment",
		host = "www.example.com",
		hostname = "www.example.com",
		href = "https://www.example.com/path%257B%257Fpath.html?query%2527%257F=query#fragment%253C%257Ffragment",
		origin = "https://www.example.com",
		password = "",
		pathname = "/path%257B%257Fpath.html",
		port = "",
		protocol = "https:",
		search = "?query%2527%257F=query",
		username = "",
	},
	{
		input = "https://user:pass[@foo/bar",
		base = "http://example.org",
		hash = "",
		host = "foo",
		hostname = "foo",
		href = "https://user:pass%255B%257F@foo/bar",
		origin = "https://foo",
		password = "pass%255B%257F",
		pathname = "/bar",
		port = "",
		protocol = "https:",
		search = "",
		username = "user",
	},
	"Tests for the distinct percent-encode sets",
	{
		input = "foo:// !%22$%25&'()*+,-.;<=>@[%5C]^_`{|}~@host/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://%2520!%2522$%25&'()*+,-.%253B%253C%253D%253E%2540%255B%255C%255D%255E_%2560%257B%257C%257D~@host/",
		origin = "null",
		password = "",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "%2520!%2522$%25&'()*+,-.%253B%253C%253D%253E%2540%255B%255C%255D%255E_%2560%257B%257C%257D~",
	},
	{
		input = "wss:// !%22$%25&'()*+,-.;<=>@[]^_`{|}~@host/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "wss://%2520!%2522$%25&'()*+,-.%253B%253C%253D%253E%2540%255B%255D%255E_%2560%257B%257C%257D~@host/",
		origin = "wss://host",
		password = "",
		pathname = "/",
		port = "",
		protocol = "wss:",
		search = "",
		username = "%2520!%2522$%25&'()*+,-.%253B%253C%253D%253E%2540%255B%255D%255E_%2560%257B%257C%257D~",
	},
	{
		input = "foo://joe: !%22$%25&'()*+,-.:;<=>@[%5C]^_`{|}~@host/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://joe:%2520!%2522$%25&'()*+,-.%253A%253B%253C%253D%253E%2540%255B%255C%255D%255E_%2560%257B%257C%257D~@host/",
		origin = "null",
		password = "%2520!%2522$%25&'()*+,-.%253A%253B%253C%253D%253E%2540%255B%255C%255D%255E_%2560%257B%257C%257D~",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "joe",
	},
	{
		input = "wss://joe: !%22$%25&'()*+,-.:;<=>@[]^_`{|}~@host/",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "wss://joe:%2520!%2522$%25&'()*+,-.%253A%253B%253C%253D%253E%2540%255B%255D%255E_%2560%257B%257C%257D~@host/",
		origin = "wss://host",
		password = "%2520!%2522$%25&'()*+,-.%253A%253B%253C%253D%253E%2540%255B%255D%255E_%2560%257B%257C%257D~",
		pathname = "/",
		port = "",
		protocol = "wss:",
		search = "",
		username = "joe",
	},
	{
		input = "foo://!%22$%25&'()*+,-.;=_`{}~/",
		base = nil,
		hash = "",
		host = "!%22$%25&'()*+,-.;=_`{}~",
		hostname = "!%22$%25&'()*+,-.;=_`{}~",
		href = "foo://!%22$%25&'()*+,-.;=_`{}~/",
		origin = "null",
		password = "",
		pathname = "/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	{
		input = "wss://!%22$&'()*+,-.;=_`{}~/",
		base = nil,
		hash = "",
		host = "!%22$&'()*+,-.;=_`{}~",
		hostname = "!%22$&'()*+,-.;=_`{}~",
		href = "wss://!%22$&'()*+,-.;=_`{}~/",
		origin = "wss://!%22$&'()*+,-.;=_`{}~",
		password = "",
		pathname = "/",
		port = "",
		protocol = "wss:",
		search = "",
		username = "",
	},
	{
		input = "foo://host/ !%22$%25&'()*+,-./:;<=>@[%5C]^_`{|}~",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://host/%2520!%2522$%25&'()*+,-./:;%253C=%253E@[%5C]^_%2560%257B|%257D~",
		origin = "null",
		password = "",
		pathname = "/%2520!%2522$%25&'()*+,-./:;%253C=%253E@[%5C]^_%2560%257B|%257D~",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	{
		input = "wss://host/ !%22$%25&'()*+,-./:;<=>@[%5C]^_`{|}~",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "wss://host/%2520!%2522$%25&'()*+,-./:;%253C=%253E@[/]^_%2560%257B|%257D~",
		origin = "wss://host",
		password = "",
		pathname = "/%2520!%2522$%25&'()*+,-./:;%253C=%253E@[/]^_%2560%257B|%257D~",
		port = "",
		protocol = "wss:",
		search = "",
		username = "",
	},
	{
		input = "foo://host/dir/? !%22$%25&'()*+,-./:;<=>?@[%5C]^_`{|}~",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "foo://host/dir/?%2520!%2522$%25&'()*+,-./:;%253C=%253E?@[%5C]^_`{|}~",
		origin = "null",
		password = "",
		pathname = "/dir/",
		port = "",
		protocol = "foo:",
		search = "?%2520!%2522$%25&'()*+,-./:;%253C=%253E?@[%5C]^_`{|}~",
		username = "",
	},
	{
		input = "wss://host/dir/? !%22$%25&'()*+,-./:;<=>?@[%5C]^_`{|}~",
		base = nil,
		hash = "",
		host = "host",
		hostname = "host",
		href = "wss://host/dir/?%2520!%2522$%25&%2527()*+,-./:;%253C=%253E?@[%5C]^_`{|}~",
		origin = "wss://host",
		password = "",
		pathname = "/dir/",
		port = "",
		protocol = "wss:",
		search = "?%2520!%2522$%25&%2527()*+,-./:;%253C=%253E?@[%5C]^_`{|}~",
		username = "",
	},
	{
		input = "foo://host/dir/# !%22#$%25&'()*+,-./:;<=>?@[%5C]^_`{|}~",
		base = nil,
		hash = "#%2520!%2522#$%25&'()*+,-./:;%253C=%253E?@[%5C]^_%2560{|}~",
		host = "host",
		hostname = "host",
		href = "foo://host/dir/#%2520!%2522#$%25&'()*+,-./:;%253C=%253E?@[%5C]^_%2560{|}~",
		origin = "null",
		password = "",
		pathname = "/dir/",
		port = "",
		protocol = "foo:",
		search = "",
		username = "",
	},
	{
		input = "wss://host/dir/# !%22#$%25&'()*+,-./:;<=>?@[%5C]^_`{|}~",
		base = nil,
		hash = "#%2520!%2522#$%25&'()*+,-./:;%253C=%253E?@[%5C]^_%2560{|}~",
		host = "host",
		hostname = "host",
		href = "wss://host/dir/#%2520!%2522#$%25&'()*+,-./:;%253C=%253E?@[%5C]^_%2560{|}~",
		origin = "wss://host",
		password = "",
		pathname = "/dir/",
		port = "",
		protocol = "wss:",
		search = "",
		username = "",
	},
	"Ensure that input schemes are not ignored when resolving non-special URLs",
	{
		input = "abc:rootless",
		base = "abc://host/path",
		hash = "",
		host = "",
		hostname = "",
		href = "abc:rootless",
		password = "",
		pathname = "rootless",
		port = "",
		protocol = "abc:",
		search = "",
		username = "",
	},
	{
		input = "abc:rootless",
		base = "abc:/path",
		hash = "",
		host = "",
		hostname = "",
		href = "abc:rootless",
		password = "",
		pathname = "rootless",
		port = "",
		protocol = "abc:",
		search = "",
		username = "",
	},
	{
		input = "abc:rootless",
		base = "abc:path",
		hash = "",
		host = "",
		hostname = "",
		href = "abc:rootless",
		password = "",
		pathname = "rootless",
		port = "",
		protocol = "abc:",
		search = "",
		username = "",
	},
	{
		input = "abc:/rooted",
		base = "abc://host/path",
		hash = "",
		host = "",
		hostname = "",
		href = "abc:/rooted",
		password = "",
		pathname = "/rooted",
		port = "",
		protocol = "abc:",
		search = "",
		username = "",
	},
	"Empty query and fragment with blank should throw an error",
	{
		input = "#",
		base = nil,
		failure = true,
		relativeTo = "any-base",
	},
	{
		input = "?",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	"Last component looks like a number, but not valid IPv4",
	{
		input = "http://1.2.3.4.5",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://1.2.3.4.5.",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://0..0x300/",
		base = nil,
		failure = true,
	},
	{
		input = "http://0..0x300./",
		base = nil,
		failure = true,
	},
	{
		input = "http://256.256.256.256.256",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://256.256.256.256.256.",
		base = "http://other.com/",
		failure = true,
	},
	{
		input = "http://1.2.3.08",
		base = nil,
		failure = true,
	},
	{
		input = "http://1.2.3.08.",
		base = nil,
		failure = true,
	},
	{
		input = "http://1.2.3.09",
		base = nil,
		failure = true,
	},
	{
		input = "http://09.2.3.4",
		base = nil,
		failure = true,
	},
	{
		input = "http://09.2.3.4.",
		base = nil,
		failure = true,
	},
	{
		input = "http://01.2.3.4.5",
		base = nil,
		failure = true,
	},
	{
		input = "http://01.2.3.4.5.",
		base = nil,
		failure = true,
	},
	{
		input = "http://0x100.2.3.4",
		base = nil,
		failure = true,
	},
	{
		input = "http://0x100.2.3.4.",
		base = nil,
		failure = true,
	},
	{
		input = "http://0x1.2.3.4.5",
		base = nil,
		failure = true,
	},
	{
		input = "http://0x1.2.3.4.5.",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.1.2.3.4",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.1.2.3.4.",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.2.3.4",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.2.3.4.",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.09",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.09.",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.0x4",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.0x4.",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.09..",
		base = nil,
		hash = "",
		host = "foo.09..",
		hostname = "foo.09..",
		href = "http://foo.09../",
		password = "",
		pathname = "/",
		port = "",
		protocol = "http:",
		search = "",
		username = "",
	},
	{
		input = "http://0999999999999999999/",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.0x",
		base = nil,
		failure = true,
	},
	{
		input = "http://foo.0XFfFfFfFfFfFfFfFfFfAcE123",
		base = nil,
		failure = true,
	},
	{
		input = "http://%F0%9F%92%A9.123/",
		base = nil,
		failure = true,
	},
	"U+0000 and U+FFFF in various places",
	{
		input = "https://%00y",
		base = nil,
		failure = true,
	},
	{
		input = "https://x/%00y",
		base = nil,
		hash = "",
		host = "x",
		hostname = "x",
		href = "https://x/%2500y",
		password = "",
		pathname = "/%2500y",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		input = "https://x/?%00y",
		base = nil,
		hash = "",
		host = "x",
		hostname = "x",
		href = "https://x/?%2500y",
		password = "",
		pathname = "/",
		port = "",
		protocol = "https:",
		search = "?%2500y",
		username = "",
	},
	{
		input = "https://x/?#%00y",
		base = nil,
		hash = "#%2500y",
		host = "x",
		hostname = "x",
		href = "https://x/?#%2500y",
		password = "",
		pathname = "/",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		input = "https://%EF%BF%BFy",
		base = nil,
		failure = true,
	},
	{
		input = "https://x/%EF%BF%BFy",
		base = nil,
		hash = "",
		host = "x",
		hostname = "x",
		href = "https://x/%25EF%25BF%25BFy",
		password = "",
		pathname = "/%25EF%25BF%25BFy",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		input = "https://x/?%EF%BF%BFy",
		base = nil,
		hash = "",
		host = "x",
		hostname = "x",
		href = "https://x/?%25EF%25BF%25BFy",
		password = "",
		pathname = "/",
		port = "",
		protocol = "https:",
		search = "?%25EF%25BF%25BFy",
		username = "",
	},
	{
		input = "https://x/?#%EF%BF%BFy",
		base = nil,
		hash = "#%25EF%25BF%25BFy",
		host = "x",
		hostname = "x",
		href = "https://x/?#%25EF%25BF%25BFy",
		password = "",
		pathname = "/",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		input = "non-special:%00y",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:%2500y",
		password = "",
		pathname = "%2500y",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "non-special:x/%00y",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:x/%2500y",
		password = "",
		pathname = "x/%2500y",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "non-special:x/?%00y",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:x/?%2500y",
		password = "",
		pathname = "x/",
		port = "",
		protocol = "non-special:",
		search = "?%2500y",
		username = "",
	},
	{
		input = "non-special:x/?#%00y",
		base = nil,
		hash = "#%2500y",
		host = "",
		hostname = "",
		href = "non-special:x/?#%2500y",
		password = "",
		pathname = "x/",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "non-special:%EF%BF%BFy",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:%25EF%25BF%25BFy",
		password = "",
		pathname = "%25EF%25BF%25BFy",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "non-special:x/%EF%BF%BFy",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:x/%25EF%25BF%25BFy",
		password = "",
		pathname = "x/%25EF%25BF%25BFy",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "non-special:x/?%EF%BF%BFy",
		base = nil,
		hash = "",
		host = "",
		hostname = "",
		href = "non-special:x/?%25EF%25BF%25BFy",
		password = "",
		pathname = "x/",
		port = "",
		protocol = "non-special:",
		search = "?%25EF%25BF%25BFy",
		username = "",
	},
	{
		input = "non-special:x/?#%EF%BF%BFy",
		base = nil,
		hash = "#%25EF%25BF%25BFy",
		host = "",
		hostname = "",
		href = "non-special:x/?#%25EF%25BF%25BFy",
		password = "",
		pathname = "x/",
		port = "",
		protocol = "non-special:",
		search = "",
		username = "",
	},
	{
		input = "",
		base = nil,
		failure = true,
		relativeTo = "non-opaque-path-base",
	},
	{
		input = "https://example.com/%22quoted%22",
		base = nil,
		hash = "",
		host = "example.com",
		hostname = "example.com",
		href = "https://example.com/%2522quoted%2522",
		origin = "https://example.com",
		password = "",
		pathname = "/%2522quoted%2522",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		input = "https://a%25C2%25ADb/",
		base = nil,
		hash = "",
		host = "ab",
		hostname = "ab",
		href = "https://ab/",
		origin = "https://ab",
		password = "",
		pathname = "/",
		port = "",
		protocol = "https:",
		search = "",
		username = "",
	},
	{
		comment = "Empty host after domain to ASCII",
		input = "https://%C2%AD/",
		base = nil,
		failure = true,
	},
	{
		input = "https://%25C2%25AD/",
		base = nil,
		failure = true,
	},
	{
		input = "https://xn--/",
		base = nil,
		failure = true,
	},
	"Non-special schemes that some implementations might incorrectly treat as special",
	{
		input = "data://example.com:8080/pathname?search#hash",
		base = nil,
		href = "data://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "data:///test",
		base = nil,
		href = "data:///test",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "data://test/a/../b",
		base = nil,
		href = "data://test/b",
		origin = "null",
		protocol = "data:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "data://:443",
		base = nil,
		failure = true,
	},
	{
		input = "data://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "data://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "javascript://example.com:8080/pathname?search#hash",
		base = nil,
		href = "javascript://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "javascript:///test",
		base = nil,
		href = "javascript:///test",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "javascript://test/a/../b",
		base = nil,
		href = "javascript://test/b",
		origin = "null",
		protocol = "javascript:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "javascript://:443",
		base = nil,
		failure = true,
	},
	{
		input = "javascript://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "javascript://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "mailto://example.com:8080/pathname?search#hash",
		base = nil,
		href = "mailto://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "mailto:///test",
		base = nil,
		href = "mailto:///test",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "mailto://test/a/../b",
		base = nil,
		href = "mailto://test/b",
		origin = "null",
		protocol = "mailto:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "mailto://:443",
		base = nil,
		failure = true,
	},
	{
		input = "mailto://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "mailto://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "intent://example.com:8080/pathname?search#hash",
		base = nil,
		href = "intent://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "intent:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "intent:///test",
		base = nil,
		href = "intent:///test",
		origin = "null",
		protocol = "intent:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "intent://test/a/../b",
		base = nil,
		href = "intent://test/b",
		origin = "null",
		protocol = "intent:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "intent://:443",
		base = nil,
		failure = true,
	},
	{
		input = "intent://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "intent://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "urn://example.com:8080/pathname?search#hash",
		base = nil,
		href = "urn://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "urn:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "urn:///test",
		base = nil,
		href = "urn:///test",
		origin = "null",
		protocol = "urn:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "urn://test/a/../b",
		base = nil,
		href = "urn://test/b",
		origin = "null",
		protocol = "urn:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "urn://:443",
		base = nil,
		failure = true,
	},
	{
		input = "urn://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "urn://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "turn://example.com:8080/pathname?search#hash",
		base = nil,
		href = "turn://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "turn:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "turn:///test",
		base = nil,
		href = "turn:///test",
		origin = "null",
		protocol = "turn:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "turn://test/a/../b",
		base = nil,
		href = "turn://test/b",
		origin = "null",
		protocol = "turn:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "turn://:443",
		base = nil,
		failure = true,
	},
	{
		input = "turn://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "turn://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "stun://example.com:8080/pathname?search#hash",
		base = nil,
		href = "stun://example.com:8080/pathname?search#hash",
		origin = "null",
		protocol = "stun:",
		username = "",
		password = "",
		host = "example.com:8080",
		hostname = "example.com",
		port = "8080",
		pathname = "/pathname",
		search = "?search",
		hash = "#hash",
	},
	{
		input = "stun:///test",
		base = nil,
		href = "stun:///test",
		origin = "null",
		protocol = "stun:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/test",
		search = "",
		hash = "",
	},
	{
		input = "stun://test/a/../b",
		base = nil,
		href = "stun://test/b",
		origin = "null",
		protocol = "stun:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/b",
		search = "",
		hash = "",
	},
	{
		input = "stun://:443",
		base = nil,
		failure = true,
	},
	{
		input = "stun://test:test",
		base = nil,
		failure = true,
	},
	{
		input = "stun://[:1]",
		base = nil,
		failure = true,
	},
	{
		input = "w://x:0",
		base = nil,
		href = "w://x:0",
		origin = "null",
		protocol = "w:",
		username = "",
		password = "",
		host = "x:0",
		hostname = "x",
		port = "0",
		pathname = "",
		search = "",
		hash = "",
	},
	{
		input = "west://x:0",
		base = nil,
		href = "west://x:0",
		origin = "null",
		protocol = "west:",
		username = "",
		password = "",
		host = "x:0",
		hostname = "x",
		port = "0",
		pathname = "",
		search = "",
		hash = "",
	},
	"Scheme relative path starting with multiple slashes",
	{
		input = "///test",
		base = "http://example.org/",
		href = "http://test/",
		protocol = "http:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///%5C//%5C//test",
		base = "http://example.org/",
		href = "http://test/",
		protocol = "http:",
		username = "",
		password = "",
		host = "test",
		hostname = "test",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///example.org/path",
		base = "http://example.org/",
		href = "http://example.org/path",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	{
		input = "///example.org/../path",
		base = "http://example.org/",
		href = "http://example.org/path",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	{
		input = "///example.org/../../",
		base = "http://example.org/",
		href = "http://example.org/",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///example.org/../path/../../",
		base = "http://example.org/",
		href = "http://example.org/",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "///example.org/../path/../../path",
		base = "http://example.org/",
		href = "http://example.org/path",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	{
		input = "/%5C/%5C//example.org/../path",
		base = "http://example.org/",
		href = "http://example.org/path",
		protocol = "http:",
		username = "",
		password = "",
		host = "example.org",
		hostname = "example.org",
		port = "",
		pathname = "/path",
		search = "",
		hash = "",
	},
	{
		input = "///abcdef/../",
		base = "file:///",
		href = "file:///",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
	{
		input = "/%5C//%5C/a/../",
		base = "file:///",
		href = "file://////",
		protocol = "file:",
		username = "",
		password = "",
		host = "",
		hostname = "",
		port = "",
		pathname = "////",
		search = "",
		hash = "",
	},
	{
		input = "//a/../",
		base = "file:///",
		href = "file://a/",
		protocol = "file:",
		username = "",
		password = "",
		host = "a",
		hostname = "a",
		port = "",
		pathname = "/",
		search = "",
		hash = "",
	},
}
